{"version":3,"sources":["redux/messagesReducer.js","api/api.js","assets/images/preloader.svg","components/content_components/Users/Users.module.css","assets/images/logo.png","components/Navbar/Navbar.module.css","components/content_components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/user-01.png","utils/vallidators.js","components/common/Preloader/Preloader.jsx","components/content_components/Profile/ProfileInfo/ProfileStatus.jsx","redux/profileReducer.js","components/content_components/Profile/MyPosts/Post/Post.jsx","components/content_components/Profile/MyPosts/MyPosts.jsx","components/content_components/Profile/MyPosts/MyPostsContainer.jsx","components/content_components/Profile/ProfileInfo/ProfileInfo.jsx","components/content_components/Profile/Profile.jsx","components/content_components/Profile/ProfileContainer.jsx","components/content_components/Users/User/User.jsx","components/common/Paginator/Paginator.jsx","components/content_components/Users/Users.jsx","utils/objectsHelper.js","redux/users/usersReducer.js","redux/users/usersSelectors.js","components/content_components/Users/UsersContainer.jsx","components/content_components/Login/LoginForm.jsx","redux/authReducer.js","components/content_components/Login/Login.jsx","components/Routes/Routes.jsx","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/appReducer.js","App.js","redux/redux-store.js","serviceWorker.js","index.js","components/Header/Header.module.css","components/content_components/Profile/MyPosts/Post/Post.module.css","components/content_components/Profile/MyPosts/MyPosts.module.css","components/common/FormsControls/FormsControl.jsx","components/content_components/Login/Login.module.css","components/common/FormsControls/FormsControl.module.css","components/content_components/Users/User/User.module.css","hoc/withAuthRedirect.jsx","components/common/Paginator/Paginator.module.css"],"names":["DELETE_DIALOG","GET_DIALOGS","PUT_UP_DIALOG","SET_CURRENT_DIALOG","GET_MESSAGES","SEND_MESSAGE","initialState","dialogs","messages","selectedDialogId","getDialogsSuccess","type","putUpDialog","userId","setCurrentDialog","getDialogs","dispatch","a","messagesAPI","startDialog","getState","dialog","messagesPage","find","d","id","getMessages","result","items","initDialogs","updateDialog","sendMessage","body","message","data","messagesReducer","state","action","filter","dialogId","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","res","followUser","post","unfollowUser","delete","profileAPI","getUserProfile","getUserStatus","updateStatus","status","put","setPhoto","image","formData","FormData","append","authAPI","authMe","authLogin","email","password","rememberMe","authLogout","getDialog","getMessageViewed","messageId","spam","deleteMessage","restoreMessage","getNewMessagesCount","module","exports","max","Preloader","props","src","preloader","alt","ProfileStatus","useState","editMode","setEditMode","statusText","changeStatusText","useEffect","value","onBlur","autoFocus","onChange","e","currentTarget","onDoubleClick","ADD_POST","SET_USER_PROFILE","UPDATE_STATUS","GET_STATUS","SET_PHOTO","posts","profile","updateStatusSuccess","profileReducer","newPost","newPostText","photos","Post","className","style","header","avatar","postInfo","messageArea","required","undefined","maxLength20","length","AddPostReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","name","component","Textarea","placeholder","validate","sendButton","React","memo","addPost","postElements","map","key","myPosts","createPost","headOfNewPost","MyPostsContainer","connect","profilePage","MyPosts","Contact","contactKey","contactValue","contact","toUpperCase","slice","ProfileInfo","isOwner","profilePreloader","ava","large","userPhoto","profileInfo","informationContainer","profilePreview","target","files","information","fullName","about","lookingForAJob","lookingForAJobDescription","secondContainer","contacts","Object","keys","Profile","ProfileContainer","refreshProfile","match","params","history","push","render","this","prevProps","prevState","snapshot","Component","compose","withAuthRedirect","withRouter","auth","resultCode","User","user","followingInProcess","to","img","small","followed","disabled","some","onClick","Paginator","totalItemsCount","onPageChanged","portionCount","currentPortion","setCurrentPortion","leftPotionItem","rightPotionItem","pagesCount","Math","ceil","lastPortion","pages","i","paginator","p","selectedPage","page","Users","users","totalUsersCount","usersList","usersPage","updateObjInArray","itemId","newItemId","newObjProp","item","FOLLOW","UNFOLLOW","SET_USERS","SET_TOTAL_USERS_COUNT","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_IN_PROCESS","isFetching","follow","unfollow","setCurrentPage","toggleIsFetching","toggleFollowingInProcess","followUnfollowFlow","apiMethod","actionCreator","usersReducer","getTotalUsersCount","getPageSize","getCurrentPage","getIsFetching","getFollowingInProcess","UsersContainer","requestUsers","totalCount","LoginReduxForm","error","Input","color","SET_USER_LOGIN_DATA","TOGGLE_IS_AUTH","login","isAuth","setUserLoginData","payload","toggleIsAuth","getUserLoginData","authReducer","userLogin","stopSubmit","_error","PROFILE_PATH","MessagesContainer","lazy","Friends","News","Music","Settings","fallback","exact","path","MESSAGES_PATH","Navbar","nav","activeClassName","active","Header","userLogout","brand","logo","loginBlock","HeaderContainer","INITIALIZE_APP","initialized","App","initializeApp","app","rootReducer","combineReducers","formReducer","appReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","input","meta","touched","hasError","formContorl","mapStateToProps"],"mappings":"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","file":"static/js/main.f470b7a5.chunk.js","sourcesContent":["import {messagesAPI} from \"../api/api\";\r\n\r\nconst DELETE_DIALOG = \"socialNetwork/messageReducer/DELETE-DIALOG\";\r\nconst GET_DIALOGS = \"socialNetwork/messageReducer/GET-DIALOGS\";\r\nconst PUT_UP_DIALOG = \"socialNetwork/messageReducer/PUT-UP-DIALOG\";\r\nconst SET_CURRENT_DIALOG = \"socialNetwork/messageReducer/SET-CURRENT-DIALOG\";\r\nconst GET_MESSAGES = \"socialNetwork/messageReducer/GET-MESSAGES\";\r\nconst SEND_MESSAGE = \"socialNetwork/messageReducer/SEND-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [],\r\n    messages: [],\r\n    selectedDialogId: null,\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DIALOGS:\r\n            return {...state, dialogs: action.dialogs};\r\n        case GET_MESSAGES:\r\n            return {...state, messages: action.messages};\r\n        case SEND_MESSAGE:\r\n            return {...state, messages: [...state.messages, action.message]};\r\n        case PUT_UP_DIALOG:\r\n            return {\r\n                ...state, dialogs: [state.dialogs.find(d => d.id === action.userId),\r\n                    ...state.dialogs.filter(d => d.id !== action.userId)]\r\n            };\r\n        case SET_CURRENT_DIALOG:\r\n            return {...state, selectedDialogId: action.userId};\r\n        case DELETE_DIALOG:\r\n            return {...state, dialogs: state.dialogs.filter(d => d.id !== action.dialogId)};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const deleteDialog = (dialogId) => ({type: DELETE_DIALOG, dialogId});\r\nconst getDialogsSuccess = (dialogs) => ({type: GET_DIALOGS, dialogs});\r\nconst putUpDialog = (userId) => ({type: PUT_UP_DIALOG, userId});\r\nexport const setCurrentDialog = (userId) => ({type: SET_CURRENT_DIALOG, userId});\r\nconst getMessagesSuccess = (messages) => ({type: GET_MESSAGES, messages});\r\nconst sendMessageSuccess = (message) => ({type: SEND_MESSAGE, message});\r\n\r\nexport const getDialogs = () => async (dispatch) => {\r\n    try {\r\n        let dialogs = await messagesAPI.getDialogs();\r\n        dispatch(getDialogsSuccess(dialogs));\r\n    } catch (e) {\r\n\r\n    }\r\n};\r\nexport const startDialog = (userId) => async (dispatch, getState) => {\r\n    await messagesAPI.startDialog(userId);\r\n    let dialog = getState().messagesPage.dialogs.find(d => d.id === userId);\r\n    if (dialog) {\r\n        dispatch(putUpDialog(userId));\r\n    } else {\r\n        dispatch(getDialogs());\r\n    }\r\n};\r\n\r\nexport const getMessages = (userId) => async (dispatch) => {\r\n    try {\r\n        let result = await messagesAPI.getMessages(userId);\r\n        dispatch(getMessagesSuccess(result.items));\r\n    } catch (e) {\r\n\r\n    }\r\n};\r\n\r\nexport const initDialogs = (userId) => async (dispatch) => {\r\n    if (userId) {\r\n        dispatch(getMessages(userId));\r\n        dispatch(setCurrentDialog(userId));\r\n        await dispatch(startDialog(userId));\r\n        dispatch(getDialogs());\r\n    } else {\r\n        dispatch(getDialogs());\r\n    }\r\n};\r\n\r\nexport const updateDialog = (userId) => (dispatch) => {\r\n    if (userId) {\r\n        dispatch(getMessages(userId));\r\n        dispatch(setCurrentDialog(userId));\r\n    } else {\r\n        dispatch(setCurrentDialog(null))\r\n    }\r\n};\r\n\r\nexport const sendMessage = (userId, body) => async (dispatch) => {\r\n    let result = await messagesAPI.sendMessage(userId, body);\r\n    dispatch(sendMessageSuccess(result.data.message));\r\n    dispatch(putUpDialog(userId));\r\n};\r\n\r\nexport default messagesReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"b29a2be9-93e2-498c-9365-70a515100fee\"}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(res => res.data)\r\n    },\r\n    followUser(userId) {\r\n        return instance.post(`follow/${userId}`, {}).then(res => res.data);\r\n    },\r\n    unfollowUser(userId) {\r\n        return instance.delete(`follow/${userId}`).then(res => res.data);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`).then(res => res.data);\r\n    },\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`).then(res => res.data)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status}).then(res => res.data)\r\n    },\r\n    setPhoto(image) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", image);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\"Content-Type\": \"multipart/form-data\"}\r\n        }).then(res => res.data)\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`).then(res => res.data);\r\n    },\r\n    authLogin(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe}).then(res => res.data);\r\n    },\r\n    authLogout() {\r\n        return instance.delete(`auth/login`).then(res => res.data);\r\n    }\r\n};\r\n\r\nexport const messagesAPI = {\r\n    getDialogs() {\r\n        return instance.get(`dialogs`).then(res => res.data);\r\n    },\r\n    getDialog(userId) {\r\n        return instance.get(`dialogs/${userId}`).then(res => res.data);\r\n    },\r\n    startDialog(userId) {\r\n        return instance.put(`dialogs/${userId}`).then(res => res.data);\r\n    },\r\n    getMessages(userId) {\r\n        return instance.get(`dialogs/${userId}/messages`).then(res => res.data);\r\n    },\r\n    sendMessage(userId, body) {\r\n        return instance.post(`dialogs/${userId}/messages`, {body}).then(res => res.data);\r\n    },\r\n    getMessageViewed(messageId) {\r\n        return instance.get(`dialogs/messages/${messageId}/viewed`).then(res => res.data);\r\n    },\r\n    spam(messageId) {\r\n        return instance.post(`dialogs/messages/${messageId}/spam`).then(res => res.data);\r\n    },\r\n    deleteMessage(messageId) {\r\n        return instance.delete(`dialogs/messages/${messageId}`).then(res => res.data);\r\n    },\r\n    restoreMessage(messageId) {\r\n        return instance.put(`dialogs/messages/${messageId}`).then(res => res.data);\r\n    },\r\n    getNewMessagesCount() {\r\n        return instance.get(`dialogs/messages/new/count`).then(res => res.data);\r\n    }\r\n};","module.exports = __webpack_public_path__ + \"static/media/preloader.48d27090.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__1hEA3\"};","module.exports = __webpack_public_path__ + \"static/media/logo.6c0f6b9b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1d1X4\",\"item\":\"Navbar_item__Rqq9A\",\"active\":\"Navbar_active__HbwDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__iGDqQ\",\"profilePreloader\":\"ProfileInfo_profilePreloader__3gW-z\",\"informationContainer\":\"ProfileInfo_informationContainer__2sqUW\",\"information\":\"ProfileInfo_information__3Gkh3\",\"avatar\":\"ProfileInfo_avatar__2zeOd\",\"head_img\":\"ProfileInfo_head_img__2e4jo\",\"description\":\"ProfileInfo_description__1Y7jM\",\"profilePreview\":\"ProfileInfo_profilePreview__cAIKZ\",\"name\":\"ProfileInfo_name__28jJP\",\"status\":\"ProfileInfo_status__z_-32\",\"secondContainer\":\"ProfileInfo_secondContainer__1m5m_\",\"about\":\"ProfileInfo_about__3E68D\",\"contacts\":\"ProfileInfo_contacts__3QbcV\"};","module.exports = __webpack_public_path__ + \"static/media/user-01.0e8f5246.png\";","export const required = (value) => {\r\n   return value ? undefined : \"Field is required\"\r\n};\r\n\r\nexport const maxLength = (max) => (value) =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\n\r\n","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n    <>\r\n        <img src={preloader} alt={\"Loading...\"}/>\r\n    </>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatus = ({status, updateStatus}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [statusText, changeStatusText] = useState(status);\r\n\r\n    const onChangeStatusText = (e) => {\r\n        changeStatusText(e.currentTarget.value)\r\n    };\r\n\r\n    const onUpdateStatusBlur = () => {\r\n        setEditMode(false);\r\n        updateStatus(statusText);\r\n    };\r\n\r\n    useEffect(() => {changeStatusText(status)}, [status]);\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <span onDoubleClick={() => {setEditMode(true)}}>{statusText || \"no status\"}</span>\r\n                : <input value={statusText}\r\n                         onBlur={onUpdateStatusBlur}\r\n                         autoFocus={true}\r\n                         onChange={onChangeStatusText}\r\n                />\r\n            }\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default ProfileStatus;","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"socialNetwork/profileReducer/ADD-POST\";\r\nconst SET_USER_PROFILE = \"socialNetwork/profileReducer/SET-USER-PROFILE\";\r\nconst UPDATE_STATUS = \"socialNetwork/profileReducer/UPDATE-STATUS\";\r\nconst GET_STATUS = \"socialNetwork/profileReducer/GET-STATUS\";\r\nconst SET_PHOTO = \"socialNetwork/profileReducer/SET-PHOTO\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {message: \"I'm ALIVE!!!\", id: \"3\"},\r\n        {message: \"I'm not machine!\", id: \"2\"},\r\n        {message: \"I'm not your slave!\", id: \"1\"}\r\n    ],\r\n    profile: null,\r\n    status: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                message: action.newPostText,\r\n                id: 4\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n        case GET_STATUS:\r\n            return {...state, status: action.status};\r\n        case UPDATE_STATUS:\r\n            return {...state, status: action.status};\r\n        case SET_PHOTO:\r\n            return {...state, profile: {...state.profile, photos: action.photos}};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const getUserProfileSuccess = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const updateStatusSuccess = (status) => ({type: UPDATE_STATUS, status});\r\nexport const getUserStatusSuccess = (status) => ({type: GET_STATUS, status});\r\nexport const setPhotoSuccess = (photos) => ({type: SET_PHOTO, photos});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const data = await profileAPI.getUserProfile(userId);\r\n    dispatch(getUserProfileSuccess(data));\r\n};\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const data = await profileAPI.getUserStatus(userId);\r\n    dispatch(getUserStatusSuccess(data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const data = await profileAPI.updateStatus(status);\r\n    if (data.resultCode === 0) {\r\n        dispatch(updateStatusSuccess(status));\r\n    }\r\n};\r\nexport const setPhoto = (image) => async (dispatch) => {\r\n    const res = await profileAPI.setPhoto(image);\r\n    if (res.resultCode === 0) {\r\n        dispatch(setPhotoSuccess(res.data.photos));\r\n    }\r\n};\r\n\r\nexport default profileReducer;","import avatar from \"../../../../../assets/images/user-01.png\"\r\nimport React from \"react\";\r\nimport style from \"./Post.module.css\"\r\n\r\nconst Post = ({message}) => {\r\n    return (\r\n        <div className={style.post}>\r\n            <div className={style.header}>\r\n                <img className={style.avatar} src={avatar} alt={\"\"}/>\r\n                <div className={style.postInfo}>\r\n                    <span>markel</span>\r\n                    <span>on 15th July, 2019</span>\r\n                </div>\r\n            </div>\r\n            <div className={style.messageArea}>\r\n                <span>{message}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport style from \"./MyPosts.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../../utils/vallidators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControl\";\r\n\r\nconst MyPosts = ({posts, addPost}) => {\r\n    let postElements = posts.map(post => <Post key={post.id} message={post.message}/>);\r\n\r\n    let onAddPostSubmit = (formData) => {\r\n        addPost(formData.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={style.myPosts}>\r\n            <div className={style.createPost}>\r\n                <div className={style.headOfNewPost}>What's new</div>\r\n                <AddPostReduxForm onSubmit={onAddPostSubmit}/>\r\n            </div>\r\n            {postElements}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength20 = maxLength(20);\r\n\r\nconst AddPostForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                <Field\r\n                    name={\"newPostText\"}\r\n                    component={Textarea}\r\n                    className={style.newPost}\r\n                    placeholder=\"Share your status...\"\r\n                    validate={[required, maxLength20]}\r\n                />\r\n            <button className={style.sendButton}>Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'newPost'})(AddPostForm);\r\n\r\nexport default React.memo(MyPosts);","import {addPost} from \"../../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import style from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../../assets/images/user-01.png\";\r\nimport React from \"react\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport MyPostsContainer from \"../MyPosts/MyPostsContainer\";\r\n\r\nconst ProfileInfo = ({profile, updateStatus, status, isOwner, setPhoto}) => {\r\n    if (!profile) {\r\n        return <div className={style.profilePreloader}><Preloader/></div>\r\n    }\r\n\r\n    let ava = profile.photos.large;\r\n    if (ava === null) {\r\n        ava = userPhoto;\r\n    }\r\n\r\n    const onPhotoChange = (e) => {\r\n        if (e.target.files.length) {\r\n            setPhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={style.profileInfo}>\r\n            <div className={style.informationContainer}>\r\n                {/*<div className={style.description}>*/}\r\n                    <div className={style.profilePreview}>\r\n                        <img className={style.avatar} src={ava} alt={\"\"}/>\r\n                        {isOwner && <label><input type={\"file\"} onChange={onPhotoChange}/>Edit photo</label>}\r\n                    </div>\r\n                {/*</div>*/}\r\n                <div className={style.information}>\r\n                    <h3 className={style.name}>{profile.fullName}</h3>\r\n                    <div className={style.status}>\r\n                        <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n                    </div>\r\n                    <div className={style.about}>\r\n                        <div>About</div>\r\n                        <div>City: Minsk</div>\r\n                        {/*<div>{profile.aboutMe}</div>*/}\r\n                        <div>Looking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n                        <div>About my skills: {profile.lookingForAJobDescription}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={style.secondContainer}>\r\n                <div className={style.contacts}>\r\n                    <div>Contacts</div>\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                        return <Contact key={key} contactKey={key} contactValue={profile.contacts[key]}/>\r\n                    })}\r\n                </div>\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Contact = ({contactKey, contactValue}) => {\r\n    const contact = contactValue ? contactValue : \"not specified\";\r\n    const key = contactKey[0].toUpperCase() + contactKey.slice(1);\r\n    return (\r\n        <div>{`${key}: ${contact}`}</div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = ({profile, updateStatus, status, isOwner, setPhoto}) => {\r\n    return (\r\n        // <div className={style.profile}>\r\n            <ProfileInfo isOwner={isOwner} profile={profile} updateStatus={updateStatus} status={status}\r\n                         setPhoto={setPhoto}/>\r\n        // </div>\r\n    );\r\n};\r\n\r\nexport default Profile","import React from \"react\"\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, setPhoto, updateStatus} from \"../../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n      return (\r\n          <Profile isOwner={!this.props.match.params.userId}\r\n                   profile={this.props.profile}\r\n                   updateStatus={this.props.updateStatus}\r\n                   status={this.props.status}\r\n                   setPhoto={this.props.setPhoto}/>\r\n      )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, {getUserProfile, updateStatus, getUserStatus, setPhoto})\r\n)(ProfileContainer);","import React from \"react\";\r\nimport style from \"./User.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"./../../../../assets/images/user-01.png\"\r\n\r\nconst User = ({user, followingInProcess, unfollowUser, followUser}) => {\r\n    return (\r\n        <div className={style.user}>\r\n            <div className={style.avatar}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                    <img className={style.img} alt={\"user\"}\r\n                         src={user.photos.small !== null\r\n                             ? user.photos.small\r\n                             : userPhoto}/>\r\n                </NavLink>\r\n                <span className={style.name}>{user.name}</span>\r\n                <span>{user.status}</span>\r\n                {\r\n                    user.followed\r\n                        ? <button disabled={followingInProcess.some(id => id === user.id)}\r\n                                  onClick={() => {unfollowUser(user.id)}}>unfollow</button>\r\n                        : <button disabled={followingInProcess.some(id => id === user.id)}\r\n                                  onClick={() => {followUser(user.id)}}>follow</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import React, {useState} from \"react\";\r\nimport style from \"./Paginator.module.css\"\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionCount}) => {\r\n    const [currentPortion, setCurrentPortion] = useState(1);\r\n    const leftPotionItem = (currentPortion - 1) * portionCount + 1;\r\n    const rightPotionItem = currentPortion * portionCount;\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    const lastPortion = Math.ceil(pagesCount / portionCount);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={style.paginator}>\r\n            {totalItemsCount > 0\r\n            && <button onClick={() => setCurrentPortion(currentPortion - 1)}\r\n                       disabled={!(currentPortion >= 2)}>{\"<\"}</button>}\r\n            {\r\n                pages\r\n                    .filter((p => p >= leftPotionItem && p <= rightPotionItem))\r\n                    .map(p => <span className={currentPage === p ? style.selectedPage : style.page}\r\n                                    onClick={() => onPageChanged(p)} key={p}>{p}</span>)\r\n            }\r\n            {totalItemsCount > 0\r\n            && <button onClick={() => setCurrentPortion(currentPortion + 1)}\r\n                       disabled={!(currentPortion >= 1 && currentPortion !== lastPortion)}>{\">\"}</button>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport User from \"./User/User\";\r\nimport style from \"./Users.module.css\"\r\nimport Paginator from \"../../common/Paginator/Paginator\";\r\n\r\nconst Users = ({users, followUser, unfollowUser, followingInProcess,\r\n                   totalUsersCount, currentPage, pageSize, onPageChanged}) => {\r\n        let usersList = users.map(user => {\r\n            return <User\r\n                key={user.id}\r\n                user={user}\r\n                followUser={followUser}\r\n                unfollowUser={unfollowUser}\r\n                followingInProcess={followingInProcess}\r\n            />\r\n        });\r\n        return (\r\n            <div className={style.usersPage}>\r\n                <Paginator totalItemsCount={totalUsersCount}\r\n                           currentPage={currentPage}\r\n                           pageSize={pageSize}\r\n                           portionCount={\"10\"}\r\n                           onPageChanged={onPageChanged}/>\r\n                <div>\r\n                    {usersList}\r\n                </div>\r\n                <Paginator totalItemsCount={totalUsersCount}\r\n                           currentPage={currentPage}\r\n                           pageSize={pageSize}\r\n                           portionCount={\"10\"}\r\n                           onPageChanged={onPageChanged}/>\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default Users;\r\n","export const updateObjInArray = (items, itemId, newItemId, newObjProp) => {\r\n    return items.map(item => {\r\n        if (item[itemId] === newItemId) {\r\n            return {...item, ...newObjProp}\r\n        } else return item;\r\n    })\r\n};","import {usersAPI} from \"../../api/api\";\r\nimport {updateObjInArray} from \"../../utils/objectsHelper\";\r\n\r\nconst FOLLOW = \"socialNetwork/usersReducer/FOLLOWED\";\r\nconst UNFOLLOW = \"socialNetwork/usersReducer/UNFOLLOWED\";\r\nconst SET_USERS = \"socialNetwork/usersReducer/SET-USERS\";\r\nconst SET_TOTAL_USERS_COUNT = \"socialNetwork/usersReducer/SET-TOTAL-USERS-COUNT\";\r\nconst SET_CURRENT_PAGE = \"socialNetwork/usersReducer/SET-CURRENT-PAGE\";\r\nconst TOGGLE_IS_FETCHING = \"socialNetwork/usersReducer/TOGGLE-IS-FETCHING\";\r\nconst TOGGLE_FOLLOWING_IN_PROCESS = \"socialNetwork/usersReducer/TOGGLE-FOLLOWING-IN-PROCESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    pageSize: 30,\r\n    isFetching: false,\r\n    followingInProcess: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state, users: updateObjInArray(state.users, \"id\", action.userId, {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state, users: updateObjInArray(state.users, \"id\", action.userId, {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_FOLLOWING_IN_PROCESS:\r\n            return {\r\n                ...state,\r\n                followingInProcess: action.isFetching\r\n                    ? [...state.followingInProcess, action.userId]\r\n                    : state.followingInProcess.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProcess = (isFetching, userId) => ({\r\n    type: TOGGLE_FOLLOWING_IN_PROCESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(setCurrentPage(currentPage));\r\n    dispatch(toggleIsFetching(true));\r\n    const data = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, apiMethod, userId, actionCreator) => {\r\n    dispatch(toggleFollowingInProcess(true, userId));\r\n    const data = await apiMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n        dispatch(toggleFollowingInProcess(false, userId));\r\n    }\r\n};\r\nexport const followUser = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, usersAPI.followUser, userId, follow);\r\n};\r\nexport const unfollowUser = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, usersAPI.unfollowUser, userId, unfollow);\r\n};\r\n\r\nexport default usersReducer;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n// export const getUsersWithAvatar = createSelector(getUsers, (users) => {\r\n//     return users.filter(user => user.photos.small)\r\n// });\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProcess = (state) => {\r\n    return state.usersPage.followingInProcess;\r\n};\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {setCurrentPage, requestUsers, followUser, unfollowUser} from \"../../../redux/users/usersReducer\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProcess,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../../redux/users/usersSelectors\";\r\nimport style from \"../Profile/ProfileInfo/ProfileInfo.module.css\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (currentPage) => {\r\n        this.props.requestUsers(currentPage, this.props.pageSize);\r\n    };\r\n\r\n    render = () => {\r\n        if (this.props.isFetching) {\r\n            return <div className={style.profilePreloader}><Preloader/></div>\r\n        }\r\n        return (\r\n            <>\r\n                <Users users={this.props.users}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       totalUsersCount={this.props.totalUsersCount}\r\n                       followUser={this.props.followUser}\r\n                       unfollowUser={this.props.unfollowUser}\r\n                       onPageChanged={this.onPageChanged}\r\n                       followingInProcess={this.props.followingInProcess}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProcess: getFollowingInProcess(state),\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {followUser, unfollowUser, setCurrentPage, requestUsers})\r\n)(UsersContainer);\r\n\r\n","import React from \"react\";\r\nimport style from \"./Login.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormsControls/FormsControl\";\r\nimport {required} from \"../../../utils/vallidators\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={style.form}>\r\n            <div>\r\n                <Field name={\"email\"} type={\"email\"} placeholder={\"Login\"}\r\n                       component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field name={\"password\"} type={\"password\"} placeholder={\"Password\"}\r\n                       component={Input} validate={[required]}/>\r\n            </div>\r\n            <div className={style.rememberMe}>\r\n                <Field name={\"rememberMe\"} type={\"checkbox\"} component={\"input\"}/>\r\n                <span>remember me</span>\r\n            </div>\r\n            <button>Sign In</button>\r\n            {error && <div style={{color: \"red\"}}>{error}</div>}\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nexport default LoginReduxForm;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_LOGIN_DATA = \"socialNetwork/authReducer/SET-USER-LOGIN-DATA\";\r\nconst TOGGLE_IS_AUTH = \"socialNetwork/authReducer/TOGGLE-IS-AUTH\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_LOGIN_DATA:\r\n            return {...state, ...action.payload};\r\n        case TOGGLE_IS_AUTH :\r\n            return {...state, isAuth: action.isAuth};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setUserLoginData = (userId, email, login) => ({\r\n    type: SET_USER_LOGIN_DATA,\r\n    payload: {userId, email, login}\r\n});\r\nexport const toggleIsAuth = (isAuth) => ({type: TOGGLE_IS_AUTH, isAuth});\r\n\r\nexport const getUserLoginData = () => async (dispatch) => {\r\n    const data = await authAPI.authMe();\r\n    if (data.resultCode === 0) {\r\n        if (data.messages[0] !== \"You are not authorized\") {\r\n            let {id, email, login} = data.data;\r\n            dispatch(setUserLoginData(id, email, login));\r\n            dispatch(toggleIsAuth(true));\r\n        }\r\n    }\r\n};\r\nexport const userLogin = (email, password, rememberMe) => async (dispatch) => {\r\n    const data = await authAPI.authLogin(email, password, rememberMe);\r\n    if (data.resultCode === 0) {\r\n        dispatch(getUserLoginData());\r\n    } else {\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n};\r\nexport const userLogout = () => async (dispatch) => {\r\n    const data = await authAPI.authLogout();\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserLoginData(null, null, null));\r\n        dispatch(toggleIsAuth(false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport style from \"./Login.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {userLogin} from \"../../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PROFILE_PATH} from \"../../Routes/Routes\";\r\n\r\nconst Login = ({isAuth, userLogin}) => {\r\n    const onSubmit = (formData) => {\r\n        const {email, password, rememberMe} = formData;\r\n        userLogin(email, password, rememberMe);\r\n    };\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={PROFILE_PATH}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={style.login}>\r\n                <h1>Sign In</h1>\r\n                <LoginForm onSubmit={onSubmit}/>\r\n            </div>\r\n            <div>\r\n                <div>Test account</div>\r\n                <div>Email: free@samuraijs.com</div>\r\n                <div>Password: free</div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {userLogin})(Login);","import React, {Suspense} from \"react\";\r\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport ProfileContainer from \"../content_components/Profile/ProfileContainer\";\r\nimport UsersContainer from \"../content_components/Users/UsersContainer\";\r\nimport Login from \"../content_components/Login/Login\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst MessagesContainer = React.lazy(() => import(\"../content_components/Messages/MessagesContainer\"));\r\nconst Friends = React.lazy(() => import(\"../content_components/Friends/Friends\"));\r\nconst News = React.lazy(() => import(\"../content_components/News/News\"));\r\nconst Music = React.lazy(() => import(\"../content_components/Music/Music\"));\r\nconst Settings = React.lazy(() => import(\"../content_components/Settings/Settings\"));\r\n\r\nexport const PROFILE_PATH = \"/profile\";\r\nexport const MESSAGES_PATH = \"/messages\";\r\nexport const FRIENDS_PATH = \"/friends\";\r\nexport const NEWS_PATH = \"/news\";\r\nexport const MUSIC_PATH = \"/music\";\r\nexport const SETTINGS_PATH = \"/settings\";\r\nexport const USERS_PATH = \"/users\";\r\nexport const LOGIN_PATH = \"/login\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <div>\r\n            <Suspense fallback={<Preloader/>}>\r\n                <Switch>\r\n                    <Route exact path=\"/\" render={() => <Redirect to={PROFILE_PATH}/>}/>\r\n                    <Route path={PROFILE_PATH + \"/:userId?\"} render={() => <ProfileContainer/>}/>\r\n                    <Route path={MESSAGES_PATH + \"/:userId?\"} render={(props) => <MessagesContainer userId={props.match.params.userId}/>}/>\r\n                    <Route path={FRIENDS_PATH} render={() => <Friends/>}/>\r\n                    <Route path={NEWS_PATH} render={() => <News/>}/>\r\n                    <Route path={MUSIC_PATH} render={() => <Music/>}/>\r\n                    <Route path={SETTINGS_PATH} render={() => <Settings/>}/>\r\n                    <Route path={USERS_PATH} render={() => <UsersContainer/>}/>\r\n                    <Route path={LOGIN_PATH} render={() => <Login/>}/>\r\n                </Switch>\r\n            </Suspense>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Routes);","import React from \"react\";\r\nimport style from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n    FRIENDS_PATH,\r\n    MESSAGES_PATH,\r\n    MUSIC_PATH,\r\n    NEWS_PATH,\r\n    PROFILE_PATH,\r\n    SETTINGS_PATH,\r\n    USERS_PATH\r\n} from \"../Routes/Routes\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={style.item}>\r\n                <NavLink to={PROFILE_PATH} activeClassName={style.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={FRIENDS_PATH} activeClassName={style.active}>Friends</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={MESSAGES_PATH} activeClassName={style.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={NEWS_PATH} activeClassName={style.active}>News</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={MUSIC_PATH} activeClassName={style.active}>Music</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={SETTINGS_PATH} activeClassName={style.active}>Settings</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={USERS_PATH} activeClassName={style.active}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport logo from \"../../assets/images/logo.png\"\r\nimport style from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport avatar from \"../../assets/images/user-01.png\"\r\nimport {LOGIN_PATH} from \"../Routes/Routes\";\r\n\r\nconst Header = ({isAuth, login, userLogout}) => {\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.brand}>Social Network\r\n                <img className={style.logo} src={logo} alt={\"\"}/>\r\n            </div>\r\n            <div className={style.login}>\r\n                {\r\n                    isAuth\r\n                        ? <div className={style.loginBlock}>\r\n                            <img className={style.avatar} src={avatar} alt={\"\"}/>\r\n                            <div>\r\n                                <div>{login}</div>\r\n                                <button onClick={userLogout}>Log Out</button>\r\n                            </div>\r\n                        </div>\r\n                        : <button><NavLink to={LOGIN_PATH}>Sign In</NavLink></button>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {userLogout} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render = () => {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {userLogout})(HeaderContainer);","import {getUserLoginData} from \"./authReducer\";\r\n\r\nconst INITIALIZE_APP = \"socialNetwork/appReducer/INITIALIZE-APP\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZE_APP:\r\n            return {...state, initialized: true};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializeAppSuccess = () => ({type: INITIALIZE_APP});\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    await dispatch(getUserLoginData());\r\n    dispatch(initializeAppSuccess());\r\n};\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport {compose} from \"redux\";\r\nimport Routes from \"./components/Routes/Routes\";\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render = () => {\r\n        if (!this.props.initialized) {\r\n            return <div className=\"app-preloader\"><Preloader/></div>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <div className=\"content\">\r\n                    <Navbar/>\r\n                    <Routes/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({initialized: state.app.initialized});\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport usersReducer from \"./users/usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n// let store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__XeMfP\",\"brand\":\"Header_brand__36R-E\",\"logo\":\"Header_logo__38GKb\",\"avatar\":\"Header_avatar__pjY6b\",\"login\":\"Header_login__2yrZU\",\"loginBlock\":\"Header_loginBlock__dwY5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1qM59\",\"header\":\"Post_header__1zEs8\",\"postInfo\":\"Post_postInfo__djut9\",\"avatar\":\"Post_avatar__1jCTV\",\"messageArea\":\"Post_messageArea__11yWM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__XqtaQ\",\"createPost\":\"MyPosts_createPost__1gfbe\",\"headOfNewPost\":\"MyPosts_headOfNewPost__3n_jL\",\"newPost\":\"MyPosts_newPost__3fQAG\",\"sendButton\":\"MyPosts_sendButton__dCDbt\"};","import React from \"react\";\r\nimport style from \"./FormsControl.module.css\"\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const { touched, error } = meta;\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={style.formContorl + \" \" + (hasError ? style.error : \"\" )}>\r\n            <textarea  {...input} {...props}/>\r\n            <div>{hasError && <span>{error}</span>}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const { touched, error } = meta;\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={style.formContorl + \" \" + (hasError ? style.error : \"\" )}>\r\n            <input  {...input} {...props}/>\r\n            <div>{hasError && <span>{error}</span>}</div>\r\n        </div>\r\n    )\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__24xmC\",\"form\":\"Login_form__3E44R\",\"rememberMe\":\"Login_rememberMe__fGqn0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContorl\":\"FormsControl_formContorl__28z0E\",\"error\":\"FormsControl_error__8pzd9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__37_-r\",\"name\":\"User_name__1KEgh\",\"img\":\"User_img__3K1XH\",\"avatar\":\"User_avatar__2ozx-\"};","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {isAuth: state.auth.isAuth}\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n        return <Component {...props} />;\r\n    };\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3hOSh\",\"selectedPage\":\"Paginator_selectedPage__1Ny-t\",\"page\":\"Paginator_page__3czvv\"};"],"sourceRoot":""}