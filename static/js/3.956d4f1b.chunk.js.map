{"version":3,"sources":["components/content_components/Messages/Messages.module.css","components/content_components/Messages/Dialog/Dialog.module.css","components/content_components/Messages/Chat/Chat.module.css","components/content_components/Messages/Dialog/Dialog.jsx","components/content_components/Messages/Chat/Chat.jsx","components/content_components/Messages/Messages.jsx","components/content_components/Messages/MessagesContainer.jsx"],"names":["module","exports","Dialog","id","name","photos","to","className","style","dialog","activeClassName","active","src","small","userPhoto","alt","Chat","message","sender","senderId","messageTime","addedAt","slice","yourId","useSelector","state","auth","userId","chat","corner","messageArea","content","time","messageYour","messageAreaYour","nameYour","cornerYour","AddMessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","width","height","resize","placeholder","Messages","dialogs","messages","sendMessage","selectedDialogId","dialogsElements","map","d","key","userName","messagesItems","m","body","senderName","chats","formData","newMessageText","select","MessagesContainer","render","props","this","initDialogs","Number","prevProps","prevState","snapshot","updateDialog","React","Component","compose","withAuthRedirect","connect","messagesPage"],"mappings":"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","file":"static/js/3.956d4f1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__2fDre\",\"dialogs\":\"Messages_dialogs__3YMoS\",\"active\":\"Messages_active__2-qjk\",\"chats\":\"Messages_chats__2cK09\",\"form\":\"Messages_form__240Tx\",\"select\":\"Messages_select__3Bk7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__194ML\",\"active\":\"Dialog_active__3Ae0L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__3p7dD\",\"message\":\"Chat_message__1tJBV\",\"messageYour\":\"Chat_messageYour__3BOY7\",\"corner\":\"Chat_corner__S10fm\",\"cornerYour\":\"Chat_cornerYour__1h0ab\",\"messageArea\":\"Chat_messageArea__xJrOV\",\"messageAreaYour\":\"Chat_messageAreaYour__3QI3f\",\"name\":\"Chat_name__3q-yl\",\"nameYour\":\"Chat_nameYour__1yP_j\",\"content\":\"Chat_content__C0fOK\",\"time\":\"Chat_time__3cHN2\"};","import React from \"react\";\r\nimport style from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../../../assets/images/user-01.png\"\r\n\r\nconst Dialog = ({id, name, photos}) => {\r\n    return (\r\n        // <div>\r\n            <NavLink to={\"/messages/\" + id} className={style.dialog} activeClassName={style.active}>\r\n                <img src={photos ? photos.small : userPhoto} alt={\"avatar\"}/>\r\n                {name}\r\n            </NavLink>\r\n        // </div>\r\n    )\r\n};\r\n\r\nexport default Dialog","import React from \"react\";\r\nimport style from \"./Chat.module.css\"\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst Chat = ({message, sender, senderId, addedAt}) => {\r\n    const messageTime = addedAt.slice(11, 16);\r\n    const yourId = useSelector((state) => state.auth.userId);\r\n    return (\r\n        <div className={style.chat}>\r\n            {yourId !== senderId\r\n                ? <div className={style.message}>\r\n                    <div className={style.corner}/>\r\n                    <div className={style.messageArea}>\r\n                        <div className={style.name}>{sender}</div>\r\n                        <div className={style.content}>{message}</div>\r\n                        <div className={style.time}>{messageTime}</div>\r\n                    </div>\r\n                </div>\r\n                : <div className={style.messageYour}>\r\n                    <div className={style.messageAreaYour}>\r\n                        <div className={style.nameYour}>{sender}</div>\r\n                        <div className={style.content}>{message}</div>\r\n                        <div className={style.time}>{messageTime}</div>\r\n                    </div>\r\n                    <div className={style.cornerYour}/>\r\n                </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\n// const Message = () => {\r\n//     return (\r\n//         <div className={style.message}>\r\n//             <div className={style.corner} />\r\n//             <div className={style.messageArea}>\r\n//                 <div className={style.name}>Роман Макаревич</div>\r\n//                 <div className={style.content}>Выполнил второе задание</div>\r\n//                 <div className={style.time}>07:15</div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\nexport default Chat","import React from \"react\";\r\nimport style from \"./Messages.module.css\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Chat from \"./Chat/Chat\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\r\n\r\nconst Messages = ({dialogs, messages, sendMessage, selectedDialogId}) => {\r\n    const dialogsElements = dialogs.map(d => <Dialog key={d.id} name={d.userName} id={d.id} photos={d.photos.small}/>);\r\n    const messagesItems = messages.map(m => <Chat key={m.id}\r\n                                                  message={m.body}\r\n                                                  sender={m.senderName} addedAt={m.addedAt} senderId={m.senderId}/>);\r\n\r\n    const sendNewMessage = (formData) => {\r\n        sendMessage(selectedDialogId, formData.newMessageText);\r\n    };\r\n\r\n    return (\r\n        <div className={style.messages}>\r\n            <div className={style.dialogs}>\r\n                {dialogsElements}\r\n            </div>\r\n            {\r\n                selectedDialogId\r\n                    ? <div className={style.chats}>\r\n                        {messagesItems}\r\n                        <AddMessageReduxForm onSubmit={sendNewMessage}/>\r\n                    </div>\r\n                    : <div className={style.select}>Please select dialog</div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddMessageForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={style.form}>\r\n            <Field name={\"newMessageText\"} component={Textarea}\r\n                   style={{width: \"495px\", height: \"50px\", resize: \"none\"}}\r\n                   placeholder={\"Write your message...\"}\r\n            />\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'newMessage'})(AddMessageForm);\r\n\r\nexport default Messages","import React from \"react\";\r\nimport {initDialogs, sendMessage, updateDialog} from \"../../../redux/messagesReducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass MessagesContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initDialogs(Number(this.props.userId));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.userId !== this.props.userId) {\r\n            this.props.updateDialog(Number(this.props.userId));\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return <Messages dialogs={this.props.dialogs}\r\n                         messages={this.props.messages}\r\n                         sendMessage={this.props.sendMessage}\r\n                         selectedDialogId={this.props.selectedDialogId}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.messagesPage.dialogs,\r\n        messages: state.messagesPage.messages,\r\n        selectedDialogId: state.messagesPage.selectedDialogId\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {initDialogs, updateDialog, sendMessage})\r\n)(MessagesContainer);"],"sourceRoot":""}