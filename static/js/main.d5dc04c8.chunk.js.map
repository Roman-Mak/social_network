{"version":3,"sources":["components/content_components/Messages/Dialog/Dialog.module.css","api/api.js","components/content_components/Users/User/User.jsx","components/content_components/Users/Users.jsx","redux/users/usersSelectors.js","components/common/Paginator/Paginator.jsx","components/content_components/Users/UsersContainer.jsx","assets/images/preloader.svg","components/common/Preloader/Preloader.module.css","assets/images/logo.png","components/content_components/Profile/ProfileInfo/ProfileInfo.module.css","components/content_components/Messages/Chat/Chat.module.css","utils/vallidators.js","components/content_components/Profile/ProfileInfo/ProfileStatus.jsx","components/content_components/Profile/MyPosts/Post/Post.jsx","components/common/FormsControls/FormsControl.jsx","components/content_components/Profile/MyPosts/MyPosts.jsx","components/content_components/Profile/MyPosts/MyPostsContainer.jsx","components/content_components/Profile/ProfileInfo/ProfileContact.jsx","components/content_components/Profile/ProfileInfo/ProfileContacts.jsx","components/content_components/Profile/ProfileInfo/ProfileInfo.jsx","components/content_components/Profile/Profile.jsx","components/content_components/Profile/ProfileContainer.jsx","components/content_components/Login/LoginForm.jsx","components/content_components/Login/Login.jsx","components/content_components/Messages/Dialog/Dialog.jsx","components/content_components/Messages/Chat/Chat.jsx","components/content_components/Messages/Messages.jsx","components/content_components/Messages/MessagesContainer.jsx","components/Routes/Routes.jsx","components/Navbar/Navbar.module.css","components/common/Preloader/Preloader.jsx","assets/images/user-01.png","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/appReducer.js","App.js","redux/redux-store.js","serviceWorker.js","index.js","redux/profileReducer.js","components/content_components/Users/User/User.module.css","redux/authReducer.js","components/content_components/Messages/Messages.module.css","utils/objectsHelper.js","redux/users/usersReducer.js","components/Header/Header.module.css","hoc/withAuthRedirect.jsx","redux/messagesReducer.js","components/content_components/Profile/MyPosts/Post/Post.module.css","components/content_components/Profile/MyPosts/MyPosts.module.css","components/content_components/Login/Login.module.css","components/common/FormsControls/FormsControl.module.css","components/content_components/Users/Users.module.css","components/common/Paginator/Paginator.module.css"],"names":["module","exports","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","isFriend","get","then","res","data","followUser","userId","post","unfollowUser","delete","profileAPI","getUserProfile","getUserStatus","updateStatus","status","put","setPhoto","image","formData","FormData","append","setProfileDescription","obj","authAPI","authMe","authLogin","email","password","rememberMe","authLogout","messagesAPI","getDialogs","getDialog","startDialog","getMessages","sendMessage","body","getMessageViewed","messageId","spam","deleteMessage","restoreMessage","getNewMessagesCount","User","user","followingInProcess","useState","openDialog","setOpenDialog","to","MESSAGES_PATH","id","className","style","avatar","PROFILE_PATH","img","alt","src","photos","small","userPhoto","name","followed","followBtn","disabled","some","onClick","sendBtn","Users","users","usersList","map","key","usersPage","state","getTotalUsersCount","totalUsersCount","getPageSize","getCurrentPage","getIsFetching","isFetching","getFollowingInProcess","Paginator","totalItemsCount","onPageChanged","portionCount","currentPortion","setCurrentPortion","leftPotionItem","rightPotionItem","pagesCount","Math","ceil","lastPortion","pages","i","push","paginator","filter","p","selectedPage","page","UsersContainer","props","requestUsers","render","container","Preloader","this","setCurrentPage","React","Component","compose","withAuthRedirect","connect","max","ProfileStatus","editMode","setEditMode","statusText","changeStatusText","useEffect","value","onBlur","autoFocus","onChange","e","currentTarget","onDoubleClick","Post","message","header","postInfo","messageArea","required","undefined","Textarea","input","meta","touched","error","hasError","formContorl","Input","maxLength20","length","AddPostReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","newPost","placeholder","validate","sendButton","memo","posts","addPost","postElements","myPosts","createPost","headOfNewPost","newPostText","MyPostsContainer","profilePage","MyPosts","ProfileContact","contactKey","contactValue","profile","isOwner","contact","toUpperCase","slice","inputValue","setInputValue","updatedProfileDescription","contacts","ProfileContacts","Object","keys","ProfileInfo","aboutMe","lookingForAJob","lookingForAJobDescription","fullName","aboutMeEditMode","setAboutMeEditMode","lookingForAJobEditMode","setLookingForAJobMeEditMode","lookingForAJobDescriptionEditMode","setLookingForAJobDescriptionEditMode","aboutMeLocal","setAboutMeLocal","lookingForAJobLocal","setLookingForAJobMeLocal","lookingForAJobDescriptionLocal","setLookingForAJobDescriptionLocal","setProfileData","profileData","about","type","checked","Profile","profilePreloader","ava","large","profileInfo","informationContainer","profilePreview","target","files","information","secondContainer","ProfileContainer","refreshProfile","match","params","history","prevProps","prevState","snapshot","withRouter","auth","LoginReduxForm","color","isAuth","userLogin","login","Dialog","dialog","activeClassName","active","Chat","sender","senderId","messageTime","addedAt","yourId","useSelector","chat","corner","content","time","messageYour","messageAreaYour","nameYour","cornerYour","AddMessageReduxForm","width","height","resize","Messages","dialogs","messages","selectedDialogId","resetForm","dialogsIsFetching","messagesIsFetching","dialogsElements","d","userName","messagesItems","m","senderName","chats","noMessages","newMessageText","select","MessagesContainer","reset","initDialogs","Number","updateDialog","messagesPage","Friends","lazy","Settings","FRIENDS_PATH","SETTINGS_PATH","USERS_PATH","LOGIN_PATH","fallback","exact","path","preloader","Navbar","nav","item","Header","userLogout","brand","logo","loginBlock","HeaderContainer","INITIALIZE_APP","initialState","initialized","authReducer","action","App","Routes","initializeApp","app","dispatch","a","getUserLoginData","rootReducer","combineReducers","profileReducer","messagesReducer","usersReducer","formReducer","appReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","ADD_POST","SET_USER_PROFILE","UPDATE_STATUS","GET_STATUS","SET_PHOTO","SET_DESCRIPTION","updateStatusSuccess","resultCode","desc","SET_USER_LOGIN_DATA","TOGGLE_IS_AUTH","setUserLoginData","payload","toggleIsAuth","stopSubmit","_error","updateObjInArray","items","itemId","newItemId","newObjProp","FOLLOW","UNFOLLOW","SET_USERS","SET_TOTAL_USERS_COUNT","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_IN_PROCESS","follow","unfollow","toggleIsFetching","toggleFollowingInProcess","totalCount","followUnfollowFlow","apiMethod","actionCreator","mapStateToProps","DELETE_DIALOG","GET_DIALOGS","PUT_UP_DIALOG","SET_CURRENT_DIALOG","GET_MESSAGES","SEND_MESSAGE","DIALOGS_IS_FETCHING","MESSAGES_IS_FETCHING","getDialogsSuccess","putUpDialog","setCurrentDialog","getState","find","result","dialogId"],"mappings":"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","file":"static/js/main.d5dc04c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__194ML\",\"active\":\"Dialog_active__3Ae0L\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"b29a2be9-93e2-498c-9365-70a515100fee\"}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize, isFriend) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}&friend=${isFriend}`).then(res => res.data)\r\n    },\r\n    followUser(userId) {\r\n        return instance.post(`follow/${userId}`, {}).then(res => res.data);\r\n    },\r\n    unfollowUser(userId) {\r\n        return instance.delete(`follow/${userId}`).then(res => res.data);\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`).then(res => res.data);\r\n    },\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`).then(res => res.data)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status}).then(res => res.data)\r\n    },\r\n    setPhoto(image) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", image);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\"Content-Type\": \"multipart/form-data\"}\r\n        }).then(res => res.data)\r\n    },\r\n    setProfileDescription(obj) {\r\n        return instance.put(`profile`, obj).then(res => res.data)\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`).then(res => res.data);\r\n    },\r\n    authLogin(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe}).then(res => res.data);\r\n    },\r\n    authLogout() {\r\n        return instance.delete(`auth/login`).then(res => res.data);\r\n    }\r\n};\r\n\r\nexport const messagesAPI = {\r\n    getDialogs() {\r\n        return instance.get(`dialogs`).then(res => res.data);\r\n    },\r\n    getDialog(userId) {\r\n        return instance.get(`dialogs/${userId}`).then(res => res.data);\r\n    },\r\n    startDialog(userId) {\r\n        return instance.put(`dialogs/${userId}`).then(res => res.data);\r\n    },\r\n    getMessages(userId) {\r\n        return instance.get(`dialogs/${userId}/messages`).then(res => res.data);\r\n    },\r\n    sendMessage(userId, body) {\r\n        return instance.post(`dialogs/${userId}/messages`, {body}).then(res => res.data);\r\n    },\r\n    getMessageViewed(messageId) {\r\n        return instance.get(`dialogs/messages/${messageId}/viewed`).then(res => res.data);\r\n    },\r\n    spam(messageId) {\r\n        return instance.post(`dialogs/messages/${messageId}/spam`).then(res => res.data);\r\n    },\r\n    deleteMessage(messageId) {\r\n        return instance.delete(`dialogs/messages/${messageId}`).then(res => res.data);\r\n    },\r\n    restoreMessage(messageId) {\r\n        return instance.put(`dialogs/messages/${messageId}`).then(res => res.data);\r\n    },\r\n    getNewMessagesCount() {\r\n        return instance.get(`dialogs/messages/new/count`).then(res => res.data);\r\n    }\r\n};","import React, {useState} from \"react\";\r\nimport style from \"./User.module.css\"\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport userPhoto from \"./../../../../assets/images/user-01.png\"\r\nimport {MESSAGES_PATH, PROFILE_PATH} from \"../../../Routes/Routes\";\r\n\r\nconst User = ({user, followingInProcess, unfollowUser, followUser}) => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    if (openDialog) {\r\n        return <Redirect to={`${MESSAGES_PATH}/${user.id}`}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.user}>\r\n            <div className={style.avatar}>\r\n                <NavLink to={`${PROFILE_PATH}/${user.id}`}>\r\n                    <img className={style.img} alt={\"user\"}\r\n                         src={user.photos.small !== null\r\n                             ? user.photos.small\r\n                             : userPhoto}/>\r\n                </NavLink>\r\n                <span className={style.name}>{user.name}</span>\r\n                <span className={style.status}>{user.status}</span>\r\n                {\r\n                    user.followed\r\n                        ? <button className={style.followBtn}\r\n                                  disabled={followingInProcess.some(id => id === user.id)}\r\n                                  onClick={() => {unfollowUser(user.id)}}>unfollow</button>\r\n                        : <button className={style.followBtn}\r\n                                  disabled={followingInProcess.some(id => id === user.id)}\r\n                                  onClick={() => {followUser(user.id)}}>follow</button>\r\n                }\r\n                <button className={style.sendBtn} onClick={() => setOpenDialog(true)}>Send Message</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport User from \"./User/User\";\r\nimport style from \"./Users.module.css\"\r\n\r\nconst Users = ({users, followUser, unfollowUser, followingInProcess,}) => {\r\n    let usersList = users.map(user => {\r\n        return <User key={user.id} user={user} followUser={followUser} unfollowUser={unfollowUser}\r\n            followingInProcess={followingInProcess}/>\r\n    });\r\n    return (\r\n        <div className={style.usersPage}>\r\n            <div>\r\n                {usersList}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;\r\n","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n// export const getUsersWithAvatar = createSelector(getUsers, (users) => {\r\n//     return users.filter(user => user.photos.small)\r\n// });\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProcess = (state) => {\r\n    return state.usersPage.followingInProcess;\r\n};\r\n","import React, {useState} from \"react\";\r\nimport style from \"./Paginator.module.css\"\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionCount}) => {\r\n    const [currentPortion, setCurrentPortion] = useState(1);\r\n    const leftPotionItem = (currentPortion - 1) * portionCount + 1;\r\n    const rightPotionItem = currentPortion * portionCount;\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    const lastPortion = Math.ceil(pagesCount / portionCount);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={style.paginator}>\r\n            {totalItemsCount > 0\r\n            && <button onClick={() => setCurrentPortion(currentPortion - 1)}\r\n                       disabled={!(currentPortion >= 2)}>{\"<\"}</button>}\r\n            {\r\n                pages\r\n                    .filter((p => p >= leftPotionItem && p <= rightPotionItem))\r\n                    .map(p => <span className={currentPage === p ? style.selectedPage : style.page}\r\n                                    onClick={() => onPageChanged(p)} key={p}>{p}</span>)\r\n            }\r\n            {totalItemsCount > 0\r\n            && <button onClick={() => setCurrentPortion(currentPortion + 1)}\r\n                       disabled={!(currentPortion >= 1 && currentPortion !== lastPortion)}>{\">\"}</button>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport style from \"./Users.module.css\"\r\nimport Users from \"./Users\";\r\nimport {setCurrentPage, requestUsers, followUser, unfollowUser} from \"../../../redux/users/usersReducer\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProcess,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../../redux/users/usersSelectors\";\r\nimport Paginator from \"../../common/Paginator/Paginator\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    isFriend = !!this.props.isFriend;\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize, this.isFriend);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setCurrentPage(1);\r\n    }\r\n\r\n    onPageChanged = (currentPage) => {\r\n        this.props.requestUsers(currentPage, this.props.pageSize, this.isFriend);\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={style.container}>\r\n                {this.props.totalUsersCount > this.props.pageSize\r\n                && <Paginator totalItemsCount={this.props.totalUsersCount}\r\n                              currentPage={this.props.currentPage}\r\n                              pageSize={this.props.pageSize}\r\n                              portionCount={\"10\"}\r\n                              onPageChanged={this.onPageChanged}/>}\r\n                {this.props.isFetching\r\n                    ? <div><Preloader/></div>\r\n                    : <Users users={this.props.users}\r\n                             followUser={this.props.followUser}\r\n                             unfollowUser={this.props.unfollowUser}\r\n                             followingInProcess={this.props.followingInProcess}\r\n                    />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProcess: getFollowingInProcess(state),\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {followUser, unfollowUser, setCurrentPage, requestUsers})\r\n)(UsersContainer);\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.48d27090.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__fCSO8\"};","module.exports = __webpack_public_path__ + \"static/media/logo.6c0f6b9b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__iGDqQ\",\"profilePreloader\":\"ProfileInfo_profilePreloader__3gW-z\",\"informationContainer\":\"ProfileInfo_informationContainer__2sqUW\",\"information\":\"ProfileInfo_information__3Gkh3\",\"avatar\":\"ProfileInfo_avatar__2zeOd\",\"head_img\":\"ProfileInfo_head_img__2e4jo\",\"description\":\"ProfileInfo_description__1Y7jM\",\"profilePreview\":\"ProfileInfo_profilePreview__cAIKZ\",\"contacts\":\"ProfileInfo_contacts__3QbcV\",\"about\":\"ProfileInfo_about__3E68D\",\"name\":\"ProfileInfo_name__28jJP\",\"status\":\"ProfileInfo_status__z_-32\",\"secondContainer\":\"ProfileInfo_secondContainer__1m5m_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__3p7dD\",\"message\":\"Chat_message__1tJBV\",\"messageYour\":\"Chat_messageYour__3BOY7\",\"corner\":\"Chat_corner__S10fm\",\"cornerYour\":\"Chat_cornerYour__1h0ab\",\"messageArea\":\"Chat_messageArea__xJrOV\",\"messageAreaYour\":\"Chat_messageAreaYour__3QI3f\",\"name\":\"Chat_name__3q-yl\",\"nameYour\":\"Chat_nameYour__1yP_j\",\"content\":\"Chat_content__C0fOK\",\"time\":\"Chat_time__3cHN2\"};","export const required = (value) => {\r\n   return value ? undefined : \"Field is required\"\r\n};\r\n\r\nexport const maxLength = (max) => (value) =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatus = ({status, updateStatus}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [statusText, changeStatusText] = useState(status);\r\n\r\n    const onChangeStatusText = (e) => {\r\n        changeStatusText(e.currentTarget.value)\r\n    };\r\n\r\n    const onUpdateStatusBlur = () => {\r\n        setEditMode(false);\r\n        updateStatus(statusText);\r\n    };\r\n\r\n    useEffect(() => {changeStatusText(status)}, [status]);\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <span onDoubleClick={() => {setEditMode(true)}}>{statusText || \"no status\"}</span>\r\n                : <input value={statusText}\r\n                         onBlur={onUpdateStatusBlur}\r\n                         autoFocus={true}\r\n                         onChange={onChangeStatusText}\r\n                />\r\n            }\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default ProfileStatus;","import avatar from \"../../../../../assets/images/user-01.png\"\r\nimport React from \"react\";\r\nimport style from \"./Post.module.css\"\r\n\r\nconst Post = ({message}) => {\r\n    return (\r\n        <div className={style.post}>\r\n            <div className={style.header}>\r\n                <img className={style.avatar} src={avatar} alt={\"\"}/>\r\n                <div className={style.postInfo}>\r\n                    <span>markel</span>\r\n                    <span>on 15th July, 2019</span>\r\n                </div>\r\n            </div>\r\n            <div className={style.messageArea}>\r\n                <span>{message}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post","import React from \"react\";\r\nimport style from \"./FormsControl.module.css\"\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const { touched, error } = meta;\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={style.formContorl + \" \" + (hasError ? style.error : \"\" )}>\r\n            <textarea  {...input} {...props}/>\r\n            <div>{hasError && <span>{error}</span>}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const { touched, error } = meta;\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={style.formContorl + \" \" + (hasError ? style.error : \"\" )}>\r\n            <input  {...input} {...props}/>\r\n            <div>{hasError && <span>{error}</span>}</div>\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport style from \"./MyPosts.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../../utils/vallidators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControl\";\r\n\r\nconst MyPosts = ({posts, addPost}) => {\r\n    let postElements = posts.map(post => <Post key={post.id} message={post.message}/>);\r\n\r\n    let onAddPostSubmit = (formData) => {\r\n        addPost(formData.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={style.myPosts}>\r\n            <div className={style.createPost}>\r\n                <div className={style.headOfNewPost}>What's new</div>\r\n                <AddPostReduxForm onSubmit={onAddPostSubmit}/>\r\n            </div>\r\n            {postElements}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength20 = maxLength(20);\r\n\r\nconst AddPostForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                <Field\r\n                    name={\"newPostText\"}\r\n                    component={Textarea}\r\n                    className={style.newPost}\r\n                    placeholder=\"Share your status...\"\r\n                    validate={[required, maxLength20]}\r\n                />\r\n            <button className={style.sendButton}>Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'newPost'})(AddPostForm);\r\n\r\nexport default React.memo(MyPosts);","import {addPost} from \"../../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useState} from \"react\";\r\n\r\nconst ProfileContact = ({contactKey, contactValue, profile, setProfileDescription, isOwner}) => {\r\n    const contact = contactValue ? contactValue : \"not specified\";\r\n    const key = contactKey[0].toUpperCase() + contactKey.slice(1);\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [inputValue, setInputValue] = useState(contact);\r\n\r\n    const updateProfileDescription = () => {\r\n        const updatedProfileDescription = {...profile, contacts: {...profile.contacts, [contactKey]: inputValue}};\r\n        delete updatedProfileDescription.photos;\r\n        setEditMode(false);\r\n        setProfileDescription(updatedProfileDescription);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {editMode && isOwner\r\n                ? <label>{`${key}:`}\r\n                    <input value={inputValue} onChange={(e) => setInputValue(e.currentTarget.value)}\r\n                           autoFocus={true}\r\n                           onBlur={updateProfileDescription}/>\r\n                </label>\r\n                : <div onClick={() => setEditMode(true)}>{`${key}: ${contact}`}</div>}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ProfileContact;","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport ProfileContact from \"./ProfileContact\";\r\n\r\nconst ProfileContacts = ({profile, setProfileDescription, isOwner}) => {\r\n    return (\r\n        <div className={style.contacts}>\r\n            <div>Contacts</div>\r\n            {Object.keys(profile.contacts).map(key => {\r\n                return <ProfileContact key={key} contactKey={key} contactValue={profile.contacts[key]}\r\n                                       profile={profile}\r\n                                       setProfileDescription={setProfileDescription} isOwner={isOwner}/>\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileContacts;","import style from \"./ProfileInfo.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst ProfileInfo = ({aboutMe, lookingForAJob, lookingForAJobDescription, fullName, isOwner, setProfileDescription}) => {\r\n    const [aboutMeEditMode, setAboutMeEditMode] = useState(false);\r\n    const [lookingForAJobEditMode, setLookingForAJobMeEditMode] = useState(false);\r\n    const [lookingForAJobDescriptionEditMode, setLookingForAJobDescriptionEditMode] = useState(false);\r\n\r\n    const [aboutMeLocal, setAboutMeLocal] = useState(() => {\r\n        if (aboutMe === null) {\r\n            return \"\"\r\n        } else return aboutMe\r\n    });\r\n    const [lookingForAJobLocal, setLookingForAJobMeLocal] = useState(lookingForAJob);\r\n    const [lookingForAJobDescriptionLocal, setLookingForAJobDescriptionLocal] = useState(() => {\r\n        if (lookingForAJobDescription === null) {\r\n            return \"\"\r\n        } else return lookingForAJobDescription\r\n    });\r\n\r\n    const setProfileData = () => {\r\n        const profileData = {\r\n            aboutMe: aboutMeLocal,\r\n            lookingForAJob: lookingForAJobLocal,\r\n            lookingForAJobDescription: lookingForAJobDescriptionLocal,\r\n            fullName\r\n        };\r\n        setAboutMeEditMode(false);\r\n        setLookingForAJobMeEditMode(false);\r\n        setLookingForAJobDescriptionEditMode(false);\r\n        setProfileDescription(profileData);\r\n    };\r\n\r\n    return (\r\n        <div className={style.about}>\r\n            <div>About</div>\r\n            {aboutMeEditMode && isOwner\r\n                ? <textarea value={aboutMeLocal}\r\n                            autoFocus={true}\r\n                            onBlur={setProfileData}\r\n                            onChange={e => setAboutMeLocal(e.currentTarget.value)}/>\r\n                : <div onClick={() => setAboutMeEditMode(true)}>{aboutMe}</div>}\r\n            {lookingForAJobEditMode && isOwner\r\n                ? <div>\r\n                    <label> Looking for a job\r\n                        <input type={\"checkbox\"} checked={lookingForAJobLocal}\r\n                               autoFocus={true} onBlur={setProfileData}\r\n                               onChange={e => setLookingForAJobMeLocal(e.currentTarget.checked)}/>\r\n                    </label>\r\n                </div>\r\n                : <div onClick={() => setLookingForAJobMeEditMode(true)}>\r\n                    Looking for a job: {lookingForAJob ? \"yes\" : \"no\"}\r\n                </div>}\r\n            {lookingForAJobDescriptionEditMode && isOwner\r\n                ? <div>\r\n                    <label> About my skills: <textarea value={lookingForAJobDescriptionLocal}\r\n                                                       autoFocus={true}\r\n                                                       onBlur={setProfileData}\r\n                                                       onChange={e => setLookingForAJobDescriptionLocal(e.currentTarget.value)}/>\r\n                    </label>\r\n                </div>\r\n                : <div onClick={() => setLookingForAJobDescriptionEditMode(true)}>\r\n                    About my skills: {lookingForAJobDescription}\r\n                </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo","import style from \"./ProfileInfo/ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../assets/images/user-01.png\";\r\nimport React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileInfo/ProfileStatus\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileContacts from \"./ProfileInfo/ProfileContacts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = ({profile, updateStatus, status, isOwner, setPhoto, setProfileDescription}) => {\r\n    if (!profile) {\r\n        return <div className={style.profilePreloader}><Preloader/></div>\r\n    }\r\n\r\n    let ava = profile.photos.large;\r\n    if (ava === null) {\r\n        ava = userPhoto;\r\n    }\r\n\r\n    const onPhotoChange = (e) => {\r\n        if (e.target.files.length) {\r\n            setPhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={style.profileInfo}>\r\n            <div className={style.informationContainer}>\r\n                <div className={style.profilePreview}>\r\n                    <img className={style.avatar} src={ava} alt={\"\"}/>\r\n                    {isOwner && <label><input type={\"file\"} onChange={onPhotoChange}/>Edit photo</label>}\r\n                </div>\r\n                <div className={style.information}>\r\n                    <h3 className={style.name}>{profile.fullName}</h3>\r\n                    <div className={style.status}>\r\n                        <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n                    </div>\r\n                    <ProfileInfo aboutMe={profile.aboutMe}\r\n                                 lookingForAJob={profile.lookingForAJob}\r\n                                 lookingForAJobDescription={profile.lookingForAJobDescription}\r\n                                 isOwner={isOwner}\r\n                                 fullName={profile.fullName}\r\n                                 setProfileDescription={setProfileDescription}/>\r\n                </div>\r\n            </div>\r\n            <div className={style.secondContainer}>\r\n                <ProfileContacts profile={profile} setProfileDescription={setProfileDescription} isOwner={isOwner}/>\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Profile","import React from \"react\"\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    setPhoto,\r\n    setProfileDescription,\r\n    updateStatus\r\n} from \"../../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n      return (\r\n          <Profile isOwner={!this.props.match.params.userId}\r\n                   profile={this.props.profile}\r\n                   updateStatus={this.props.updateStatus}\r\n                   status={this.props.status}\r\n                   setProfileDescription={this.props.setProfileDescription}\r\n                   setPhoto={this.props.setPhoto}/>\r\n      )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, {getUserProfile, updateStatus, getUserStatus, setPhoto, setProfileDescription})\r\n)(ProfileContainer);","import React from \"react\";\r\nimport style from \"./Login.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormsControls/FormsControl\";\r\nimport {required} from \"../../../utils/vallidators\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={style.form}>\r\n            <div>\r\n                <Field name={\"email\"} type={\"email\"} placeholder={\"Login\"}\r\n                       component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field name={\"password\"} type={\"password\"} placeholder={\"Password\"}\r\n                       component={Input} validate={[required]}/>\r\n            </div>\r\n            <div className={style.rememberMe}>\r\n                <Field name={\"rememberMe\"} type={\"checkbox\"} component={\"input\"}/>\r\n                <span>remember me</span>\r\n            </div>\r\n            <button>Sign In</button>\r\n            {error && <div style={{color: \"red\"}}>{error}</div>}\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport style from \"./Login.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {userLogin} from \"../../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PROFILE_PATH} from \"../../Routes/Routes\";\r\n\r\nconst Login = ({isAuth, userLogin}) => {\r\n    const onSubmit = (formData) => {\r\n        const {email, password, rememberMe} = formData;\r\n        userLogin(email, password, rememberMe);\r\n    };\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={PROFILE_PATH}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={style.login}>\r\n                <h1>Sign In</h1>\r\n                <LoginForm onSubmit={onSubmit}/>\r\n            </div>\r\n            <div>\r\n                <div>Test account</div>\r\n                <div>Email: free@samuraijs.com</div>\r\n                <div>Password: free</div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {userLogin})(Login);","import React from \"react\";\r\nimport style from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../../../assets/images/user-01.png\"\r\n\r\nconst Dialog = ({id, name, photos}) => {\r\n    return (\r\n        // <div>\r\n            <NavLink to={\"/messages/\" + id} className={style.dialog} activeClassName={style.active}>\r\n                <img src={photos ? photos : userPhoto} alt={\"avatar\"}/>\r\n                {name}\r\n            </NavLink>\r\n        // </div>\r\n    )\r\n};\r\n\r\nexport default Dialog","import React from \"react\";\r\nimport style from \"./Chat.module.css\"\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst Chat = ({message, sender, senderId, addedAt}) => {\r\n    const messageTime = addedAt.slice(11, 16);\r\n    const yourId = useSelector((state) => state.auth.userId);\r\n    return (\r\n        <div className={style.chat}>\r\n            {yourId !== senderId\r\n                ? <div className={style.message}>\r\n                    <div className={style.corner}/>\r\n                    <div className={style.messageArea}>\r\n                        <div className={style.name}>{sender}</div>\r\n                        <div className={style.content}>{message}</div>\r\n                        <div className={style.time}>{messageTime}</div>\r\n                    </div>\r\n                </div>\r\n                : <div className={style.messageYour}>\r\n                    <div className={style.messageAreaYour}>\r\n                        <div className={style.nameYour}>{sender}</div>\r\n                        <div className={style.content}>{message}</div>\r\n                        <div className={style.time}>{messageTime}</div>\r\n                    </div>\r\n                    <div className={style.cornerYour}/>\r\n                </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\n// const Message = () => {\r\n//     return (\r\n//         <div className={style.message}>\r\n//             <div className={style.corner} />\r\n//             <div className={style.messageArea}>\r\n//                 <div className={style.name}>Роман Макаревич</div>\r\n//                 <div className={style.content}>Выполнил второе задание</div>\r\n//                 <div className={style.time}>07:15</div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\nexport default Chat","import React from \"react\";\r\nimport style from \"./Messages.module.css\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Chat from \"./Chat/Chat\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\nconst Messages = ({dialogs, messages, sendMessage, selectedDialogId, resetForm,\r\n                      dialogsIsFetching, messagesIsFetching}) => {\r\n    const dialogsElements = dialogs.map(d => {\r\n        return <Dialog key={d.id} name={d.userName} id={d.id} photos={d.photos.small}/>\r\n    });\r\n    const messagesItems = messages.map(m => {\r\n        return <Chat key={m.id} message={m.body} sender={m.senderName} addedAt={m.addedAt} senderId={m.senderId}/>\r\n    });\r\n\r\n    const sendNewMessage = (formData) => {\r\n        sendMessage(selectedDialogId, formData.newMessageText);\r\n        resetForm(\"newMessage\");\r\n    };\r\n\r\n    return (\r\n        <div className={style.messages}>\r\n            {dialogsIsFetching\r\n                ? <div style={{width: \"300px\"}}><Preloader/></div>\r\n                : <div className={style.dialogs}>\r\n                    {dialogsElements}\r\n                </div>}\r\n            {\r\n                selectedDialogId\r\n                    ? <div className={style.chats}>\r\n                        {messagesIsFetching && <div className={style.noMessages}><Preloader/></div>}\r\n                        {messagesItems.length > 0 && !messagesIsFetching  && messagesItems}\r\n                        {!messagesIsFetching && messagesItems.length === 0\r\n                        && <div className={style.noMessages}>No messages</div>}\r\n                        <AddMessageReduxForm onSubmit={sendNewMessage}/>\r\n                    </div>\r\n                    : <div className={style.select}>Please select dialog</div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddMessageForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={style.form}>\r\n            <Field name={\"newMessageText\"} component={Textarea}\r\n                   style={{width: \"495px\", height: \"50px\", resize: \"none\"}}\r\n                   placeholder={\"Write your message...\"}/>\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({form: \"newMessage\"})(AddMessageForm);\r\n\r\nexport default Messages","import React from \"react\";\r\nimport {initDialogs, sendMessage, updateDialog} from \"../../../redux/messagesReducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {reset} from 'redux-form';\r\n\r\nclass MessagesContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initDialogs(Number(this.props.userId));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.userId !== this.props.userId) {\r\n            this.props.updateDialog(Number(this.props.userId));\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return <Messages dialogs={this.props.dialogs}\r\n                         messages={this.props.messages}\r\n                         sendMessage={this.props.sendMessage}\r\n                         selectedDialogId={this.props.selectedDialogId}\r\n                         dialogsIsFetching={this.props.dialogsIsFetching}\r\n                         messagesIsFetching={this.props.messagesIsFetching}\r\n                         resetForm={this.props.reset}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.messagesPage.dialogs,\r\n        messages: state.messagesPage.messages,\r\n        selectedDialogId: state.messagesPage.selectedDialogId,\r\n        dialogsIsFetching: state.messagesPage.dialogsIsFetching,\r\n        messagesIsFetching: state.messagesPage.messagesIsFetching\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {initDialogs, updateDialog, sendMessage, reset})\r\n)(MessagesContainer);","import React, {Suspense} from \"react\";\r\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport ProfileContainer from \"../content_components/Profile/ProfileContainer\";\r\nimport UsersContainer from \"../content_components/Users/UsersContainer\";\r\nimport Login from \"../content_components/Login/Login\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport MessagesContainer from \"../content_components/Messages/MessagesContainer\";\r\n\r\nconst Friends = React.lazy(() => import(\"../content_components/Friends/Friends\"));\r\nconst Settings = React.lazy(() => import(\"../content_components/Settings/Settings\"));\r\n\r\nexport const PROFILE_PATH = \"/profile\";\r\nexport const MESSAGES_PATH = \"/messages\";\r\nexport const FRIENDS_PATH = \"/friends\";\r\nexport const SETTINGS_PATH = \"/settings\";\r\nexport const USERS_PATH = \"/users\";\r\nexport const LOGIN_PATH = \"/login\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <div>\r\n            <Suspense fallback={<Preloader/>}>\r\n                <Switch>\r\n                    <Route exact path=\"/\" render={() => <Redirect to={PROFILE_PATH}/>}/>\r\n                    <Route path={PROFILE_PATH + \"/:userId?\"} render={() => <ProfileContainer/>}/>\r\n                    <Route path={MESSAGES_PATH + \"/:userId?\"} render={(props) => <MessagesContainer userId={props.match.params.userId}/>}/>\r\n                    <Route path={FRIENDS_PATH} render={() => <Friends/>}/>\r\n                    <Route path={SETTINGS_PATH} render={() => <Settings/>}/>\r\n                    <Route path={USERS_PATH} render={() => <UsersContainer/>}/>\r\n                    <Route path={LOGIN_PATH} render={() => <Login/>}/>\r\n                </Switch>\r\n            </Suspense>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Routes);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1d1X4\",\"item\":\"Navbar_item__Rqq9A\",\"active\":\"Navbar_active__HbwDx\"};","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport style from \"./Preloader.module.css\"\r\nimport React from \"react\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n    <div className={style.preloader}>\r\n        <img src={preloader} alt={\"Loading...\"}/>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","module.exports = __webpack_public_path__ + \"static/media/user-01.0e8f5246.png\";","import React from \"react\";\r\nimport style from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FRIENDS_PATH, MESSAGES_PATH, PROFILE_PATH, SETTINGS_PATH, USERS_PATH} from \"../Routes/Routes\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={style.item}>\r\n                <NavLink to={PROFILE_PATH} activeClassName={style.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={FRIENDS_PATH} activeClassName={style.active}>Friends</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={MESSAGES_PATH} activeClassName={style.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={SETTINGS_PATH} activeClassName={style.active}>Settings</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={USERS_PATH} activeClassName={style.active}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport logo from \"../../assets/images/logo.png\"\r\nimport style from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport avatar from \"../../assets/images/user-01.png\"\r\nimport {LOGIN_PATH} from \"../Routes/Routes\";\r\n\r\nconst Header = ({isAuth, login, userLogout}) => {\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.brand}>Social Network\r\n                <img className={style.logo} src={logo} alt={\"\"}/>\r\n            </div>\r\n            <div className={style.login}>\r\n                {\r\n                    isAuth\r\n                        ? <div className={style.loginBlock}>\r\n                            <img className={style.avatar} src={avatar} alt={\"\"}/>\r\n                            <div>\r\n                                <div>{login}</div>\r\n                                <button onClick={userLogout}>Log Out</button>\r\n                            </div>\r\n                        </div>\r\n                        : <button><NavLink to={LOGIN_PATH}>Sign In</NavLink></button>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {userLogout} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render = () => {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {userLogout})(HeaderContainer);","import {getUserLoginData} from \"./authReducer\";\r\n\r\nconst INITIALIZE_APP = \"socialNetwork/appReducer/INITIALIZE-APP\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZE_APP:\r\n            return {...state, initialized: true};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializeAppSuccess = () => ({type: INITIALIZE_APP});\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    await dispatch(getUserLoginData());\r\n    dispatch(initializeAppSuccess());\r\n};\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport {compose} from \"redux\";\r\nimport Routes from \"./components/Routes/Routes\";\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render = () => {\r\n        if (!this.props.initialized) {\r\n            return <div className=\"app-preloader\"><Preloader/></div>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <div className=\"content\">\r\n                    <Navbar/>\r\n                    <Routes/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({initialized: state.app.initialized});\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport usersReducer from \"./users/usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n// let store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"socialNetwork/profileReducer/ADD-POST\";\r\nconst SET_USER_PROFILE = \"socialNetwork/profileReducer/SET-USER-PROFILE\";\r\nconst UPDATE_STATUS = \"socialNetwork/profileReducer/UPDATE-STATUS\";\r\nconst GET_STATUS = \"socialNetwork/profileReducer/GET-STATUS\";\r\nconst SET_PHOTO = \"socialNetwork/profileReducer/SET-PHOTO\";\r\nconst SET_DESCRIPTION = \"socialNetwork/profileReducer/SET_DESCRIPTION\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {message: \"I'm ALIVE!!!\", id: \"3\"},\r\n        {message: \"I'm not machine!\", id: \"2\"},\r\n        {message: \"I'm not your slave!\", id: \"1\"}\r\n    ],\r\n    profile: null,\r\n    status: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                message: action.newPostText,\r\n                id: 4\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n        case GET_STATUS:\r\n            return {...state, status: action.status};\r\n        case UPDATE_STATUS:\r\n            return {...state, status: action.status};\r\n        case SET_PHOTO:\r\n            return {...state, profile: {...state.profile, photos: action.photos}};\r\n        case SET_DESCRIPTION:\r\n            return {...state, profile: {...state.profile, ...action.profileInfo}};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const getUserProfileSuccess = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const updateStatusSuccess = (status) => ({type: UPDATE_STATUS, status});\r\nexport const getUserStatusSuccess = (status) => ({type: GET_STATUS, status});\r\nexport const setPhotoSuccess = (photos) => ({type: SET_PHOTO, photos});\r\nexport const setProfileDescriptionSuccess = (profileInfo) => ({type: SET_DESCRIPTION, profileInfo});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const data = await profileAPI.getUserProfile(userId);\r\n    dispatch(getUserProfileSuccess(data));\r\n};\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const data = await profileAPI.getUserStatus(userId);\r\n    dispatch(getUserStatusSuccess(data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const data = await profileAPI.updateStatus(status);\r\n    if (data.resultCode === 0) {\r\n        dispatch(updateStatusSuccess(status));\r\n    }\r\n};\r\nexport const setPhoto = (image) => async (dispatch) => {\r\n    const res = await profileAPI.setPhoto(image);\r\n    if (res.resultCode === 0) {\r\n        dispatch(setPhotoSuccess(res.data.photos));\r\n    }\r\n};\r\nexport const setProfileDescription = (desc) => async (dispatch) => {\r\n    const res = await profileAPI.setProfileDescription(desc);\r\n    if (res.resultCode === 0) {\r\n        dispatch(setProfileDescriptionSuccess(desc));\r\n    }\r\n};\r\n\r\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__37_-r\",\"followBtn\":\"User_followBtn__1xwIY\",\"sendBtn\":\"User_sendBtn__1PBxJ\",\"name\":\"User_name__1KEgh\",\"status\":\"User_status__q08tx\",\"img\":\"User_img__3K1XH\",\"avatar\":\"User_avatar__2ozx-\"};","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_LOGIN_DATA = \"socialNetwork/authReducer/SET-USER-LOGIN-DATA\";\r\nconst TOGGLE_IS_AUTH = \"socialNetwork/authReducer/TOGGLE-IS-AUTH\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_LOGIN_DATA:\r\n            return {...state, ...action.payload};\r\n        case TOGGLE_IS_AUTH :\r\n            return {...state, isAuth: action.isAuth};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setUserLoginData = (userId, email, login) => ({\r\n    type: SET_USER_LOGIN_DATA,\r\n    payload: {userId, email, login}\r\n});\r\nexport const toggleIsAuth = (isAuth) => ({type: TOGGLE_IS_AUTH, isAuth});\r\n\r\nexport const getUserLoginData = () => async (dispatch) => {\r\n    const data = await authAPI.authMe();\r\n    if (data.resultCode === 0) {\r\n        if (data.messages[0] !== \"You are not authorized\") {\r\n            let {id, email, login} = data.data;\r\n            dispatch(setUserLoginData(id, email, login));\r\n            dispatch(toggleIsAuth(true));\r\n        }\r\n    }\r\n};\r\nexport const userLogin = (email, password, rememberMe) => async (dispatch) => {\r\n    const data = await authAPI.authLogin(email, password, rememberMe);\r\n    if (data.resultCode === 0) {\r\n        dispatch(getUserLoginData());\r\n    } else {\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n};\r\nexport const userLogout = () => async (dispatch) => {\r\n    const data = await authAPI.authLogout();\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserLoginData(null, null, null));\r\n        dispatch(toggleIsAuth(false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__2fDre\",\"dialogs\":\"Messages_dialogs__3YMoS\",\"active\":\"Messages_active__2-qjk\",\"chats\":\"Messages_chats__2cK09\",\"noMessages\":\"Messages_noMessages__2r93y\",\"form\":\"Messages_form__240Tx\",\"select\":\"Messages_select__3Bk7L\"};","export const updateObjInArray = (items, itemId, newItemId, newObjProp) => {\r\n    return items.map(item => {\r\n        if (item[itemId] === newItemId) {\r\n            return {...item, ...newObjProp}\r\n        } else return item;\r\n    })\r\n};","import {usersAPI} from \"../../api/api\";\r\nimport {updateObjInArray} from \"../../utils/objectsHelper\";\r\n\r\nconst FOLLOW = \"socialNetwork/usersReducer/FOLLOWED\";\r\nconst UNFOLLOW = \"socialNetwork/usersReducer/UNFOLLOWED\";\r\nconst SET_USERS = \"socialNetwork/usersReducer/SET-USERS\";\r\nconst SET_TOTAL_USERS_COUNT = \"socialNetwork/usersReducer/SET-TOTAL-USERS-COUNT\";\r\nconst SET_CURRENT_PAGE = \"socialNetwork/usersReducer/SET-CURRENT-PAGE\";\r\nconst TOGGLE_IS_FETCHING = \"socialNetwork/usersReducer/TOGGLE-IS-FETCHING\";\r\nconst TOGGLE_FOLLOWING_IN_PROCESS = \"socialNetwork/usersReducer/TOGGLE-FOLLOWING-IN-PROCESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    pageSize: 30,\r\n    isFetching: false,\r\n    followingInProcess: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state, users: updateObjInArray(state.users, \"id\", action.userId, {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state, users: updateObjInArray(state.users, \"id\", action.userId, {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_FOLLOWING_IN_PROCESS:\r\n            return {\r\n                ...state,\r\n                followingInProcess: action.isFetching\r\n                    ? [...state.followingInProcess, action.userId]\r\n                    : state.followingInProcess.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProcess = (isFetching, userId) => ({\r\n    type: TOGGLE_FOLLOWING_IN_PROCESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (currentPage, pageSize, isFriend) => async (dispatch) => {\r\n    dispatch(setCurrentPage(currentPage));\r\n    dispatch(toggleIsFetching(true));\r\n    const data = await usersAPI.getUsers(currentPage, pageSize, isFriend);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, apiMethod, userId, actionCreator) => {\r\n    dispatch(toggleFollowingInProcess(true, userId));\r\n    const data = await apiMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n        dispatch(toggleFollowingInProcess(false, userId));\r\n    }\r\n};\r\nexport const followUser = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, usersAPI.followUser, userId, follow);\r\n};\r\nexport const unfollowUser = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, usersAPI.unfollowUser, userId, unfollow);\r\n};\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__XeMfP\",\"brand\":\"Header_brand__36R-E\",\"logo\":\"Header_logo__38GKb\",\"avatar\":\"Header_avatar__pjY6b\",\"login\":\"Header_login__2yrZU\",\"loginBlock\":\"Header_loginBlock__dwY5J\"};","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {isAuth: state.auth.isAuth}\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n        return <Component {...props} />;\r\n    };\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n};\r\n\r\n","import {messagesAPI} from \"../api/api\";\r\n\r\nconst DELETE_DIALOG = \"socialNetwork/messageReducer/DELETE-DIALOG\";\r\nconst GET_DIALOGS = \"socialNetwork/messageReducer/GET-DIALOGS\";\r\nconst PUT_UP_DIALOG = \"socialNetwork/messageReducer/PUT-UP-DIALOG\";\r\nconst SET_CURRENT_DIALOG = \"socialNetwork/messageReducer/SET-CURRENT-DIALOG\";\r\nconst GET_MESSAGES = \"socialNetwork/messageReducer/GET-MESSAGES\";\r\nconst SEND_MESSAGE = \"socialNetwork/messageReducer/SEND-MESSAGE\";\r\nconst DIALOGS_IS_FETCHING = \"socialNetwork/messageReducer/DIALOGS-IS-FETCHING\";\r\nconst MESSAGES_IS_FETCHING = \"socialNetwork/messageReducer/MESSAGES-IS-FETCHING\";\r\n\r\nlet initialState = {\r\n    dialogs: [],\r\n    messages: [],\r\n    selectedDialogId: null,\r\n    dialogsIsFetching: false,\r\n    messagesIsFetching: false\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DIALOGS:\r\n            return {...state, dialogs: action.dialogs};\r\n        case GET_MESSAGES:\r\n            return {...state, messages: action.messages};\r\n        case SEND_MESSAGE:\r\n            return {...state, messages: [...state.messages, action.message]};\r\n        case PUT_UP_DIALOG:\r\n            return {\r\n                ...state, dialogs: [state.dialogs.find(d => d.id === action.userId),\r\n                    ...state.dialogs.filter(d => d.id !== action.userId)]\r\n            };\r\n        case SET_CURRENT_DIALOG:\r\n            return {...state, selectedDialogId: action.userId};\r\n        case DELETE_DIALOG:\r\n            return {...state, dialogs: state.dialogs.filter(d => d.id !== action.dialogId)};\r\n        case DIALOGS_IS_FETCHING:\r\n            return {...state, dialogsIsFetching: action.isFetching};\r\n        case MESSAGES_IS_FETCHING:\r\n            return {...state, messagesIsFetching: action.isFetching};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const deleteDialog = (dialogId) => ({type: DELETE_DIALOG, dialogId});\r\nconst getDialogsSuccess = (dialogs) => ({type: GET_DIALOGS, dialogs});\r\nconst putUpDialog = (userId) => ({type: PUT_UP_DIALOG, userId});\r\nexport const setCurrentDialog = (userId) => ({type: SET_CURRENT_DIALOG, userId});\r\nconst getMessagesSuccess = (messages) => ({type: GET_MESSAGES, messages});\r\nconst sendMessageSuccess = (message) => ({type: SEND_MESSAGE, message});\r\nconst dialogsIsFetching = (isFetching) => ({type: DIALOGS_IS_FETCHING, isFetching});\r\nconst messagesIsFetching = (isFetching) => ({type: MESSAGES_IS_FETCHING, isFetching});\r\n\r\nexport const getDialogs = () => async (dispatch) => {\r\n    dispatch(dialogsIsFetching(true));\r\n    try {\r\n        let dialogs = await messagesAPI.getDialogs();\r\n        dispatch(getDialogsSuccess(dialogs));\r\n        dispatch(dialogsIsFetching(false));\r\n    } catch (e) {\r\n        dispatch(dialogsIsFetching(false));\r\n    }\r\n};\r\nexport const startDialog = (userId) => async (dispatch, getState) => {\r\n    await messagesAPI.startDialog(userId);\r\n    let dialog = getState().messagesPage.dialogs.find(d => d.id === userId);\r\n    if (dialog) {\r\n        dispatch(putUpDialog(userId));\r\n    } else {\r\n        dispatch(getDialogs());\r\n    }\r\n};\r\n\r\nexport const getMessages = (userId) => async (dispatch) => {\r\n    dispatch(messagesIsFetching(true));\r\n    try {\r\n        let result = await messagesAPI.getMessages(userId);\r\n        dispatch(getMessagesSuccess(result.items));\r\n        dispatch(messagesIsFetching(false));\r\n    } catch (e) {\r\n        dispatch(messagesIsFetching(false));\r\n    }\r\n};\r\n\r\nexport const initDialogs = (userId) => async (dispatch) => {\r\n    if (userId) {\r\n        dispatch(getMessages(userId));\r\n        dispatch(setCurrentDialog(userId));\r\n        await dispatch(startDialog(userId));\r\n        dispatch(getDialogs());\r\n    } else {\r\n        dispatch(getDialogs());\r\n    }\r\n};\r\n\r\nexport const updateDialog = (userId) => (dispatch) => {\r\n    if (userId) {\r\n        dispatch(getMessages(userId));\r\n        dispatch(setCurrentDialog(userId));\r\n    } else {\r\n        dispatch(setCurrentDialog(null))\r\n    }\r\n};\r\n\r\nexport const sendMessage = (userId, body) => async (dispatch) => {\r\n    let result = await messagesAPI.sendMessage(userId, body);\r\n    dispatch(sendMessageSuccess(result.data.message));\r\n    dispatch(putUpDialog(userId));\r\n};\r\n\r\nexport default messagesReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1qM59\",\"header\":\"Post_header__1zEs8\",\"postInfo\":\"Post_postInfo__djut9\",\"avatar\":\"Post_avatar__1jCTV\",\"messageArea\":\"Post_messageArea__11yWM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__XqtaQ\",\"createPost\":\"MyPosts_createPost__1gfbe\",\"headOfNewPost\":\"MyPosts_headOfNewPost__3n_jL\",\"newPost\":\"MyPosts_newPost__3fQAG\",\"sendButton\":\"MyPosts_sendButton__dCDbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__24xmC\",\"form\":\"Login_form__3E44R\",\"rememberMe\":\"Login_rememberMe__fGqn0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContorl\":\"FormsControl_formContorl__28z0E\",\"error\":\"FormsControl_error__8pzd9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__1hEA3\",\"container\":\"Users_container__3cyuP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3hOSh\",\"selectedPage\":\"Paginator_selectedPage__1Ny-t\",\"page\":\"Paginator_page__3czvv\"};"],"sourceRoot":""}