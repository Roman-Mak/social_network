{"version":3,"sources":["redux/messagesReducer.js","assets/images/preloader.svg","components/content_components/Users/Users.module.css","assets/images/logo.png","components/Navbar/Navbar.module.css","components/content_components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/user-01.png","components/common/Preloader/Preloader.jsx","components/content_components/Profile/ProfileInfo/ProfileStatus.jsx","api/api.js","redux/profileReducer.js","components/content_components/Profile/MyPosts/Post/Post.jsx","components/content_components/Profile/MyPosts/MyPosts.jsx","components/content_components/Profile/MyPosts/MyPostsContainer.jsx","components/content_components/Profile/ProfileInfo/ProfileInfo.jsx","components/content_components/Profile/Profile.jsx","components/content_components/Profile/ProfileContainer.jsx","components/content_components/Users/User/User.jsx","components/common/Paginator/Paginator.jsx","components/content_components/Users/Users.jsx","utils/objectsHelper.js","redux/users/usersReducer.js","redux/users/usersSelectors.js","components/content_components/Users/UsersContainer.jsx","components/content_components/Login/LoginForm.jsx","redux/authReducer.js","components/content_components/Login/Login.jsx","components/Routes/Routes.jsx","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/appReducer.js","App.js","redux/redux-store.js","serviceWorker.js","index.js","components/Header/Header.module.css","utils/vallidators.js","components/content_components/Profile/MyPosts/Post/Post.module.css","components/content_components/Profile/MyPosts/MyPosts.module.css","components/common/FormsControls/FormsControl.jsx","components/content_components/Login/Login.module.css","components/common/FormsControls/FormsControl.module.css","components/content_components/Users/User/User.module.css","components/common/Paginator/Paginator.module.css","hoc/withAuthRedirect.jsx"],"names":["ADD_MESSAGE","DELETE_DIALOG","initialState","dialogs","name","id","chats","message","messageText","addMessage","newMessageText","type","messagesReducer","state","action","filter","d","dialogId","module","exports","Preloader","props","src","preloader","alt","ProfileStatus","status","updateStatus","useState","editMode","setEditMode","statusText","changeStatusText","useEffect","value","onBlur","autoFocus","onChange","e","currentTarget","onDoubleClick","instance","axios","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","get","then","res","data","userId","post","delete","profileAPI","put","image","formData","FormData","append","authAPI","email","password","rememberMe","ADD_POST","SET_USER_PROFILE","UPDATE_STATUS","GET_STATUS","SET_PHOTO","posts","profile","updateStatusSuccess","profileReducer","newPost","newPostText","photos","Post","className","style","header","avatar","postInfo","messageArea","maxLength20","maxLength","AddPostReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","placeholder","validate","required","sendButton","React","memo","addPost","postElements","map","key","myPosts","createPost","headOfNewPost","MyPostsContainer","connect","profilePage","MyPosts","Contact","contactKey","contactValue","contact","toUpperCase","slice","ProfileInfo","isOwner","setPhoto","profilePreloader","ava","large","userPhoto","profileInfo","informationContainer","profilePreview","target","files","length","information","fullName","about","lookingForAJob","lookingForAJobDescription","secondContainer","contacts","Object","keys","Profile","ProfileContainer","refreshProfile","match","params","history","push","getUserProfile","getUserStatus","render","this","prevProps","prevState","snapshot","Component","compose","withRouter","auth","dispatch","a","resultCode","User","user","followingInProcess","unfollowUser","followUser","to","img","small","followed","disabled","some","onClick","Paginator","totalItemsCount","onPageChanged","portionCount","currentPortion","setCurrentPortion","leftPotionItem","rightPotionItem","pagesCount","Math","ceil","lastPortion","pages","i","paginator","p","selectedPage","page","Users","users","totalUsersCount","usersList","usersPage","updateObjInArray","items","itemId","newItemId","newObjProp","item","FOLLOW","UNFOLLOW","SET_USERS","SET_TOTAL_USERS_COUNT","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_IN_PROCESS","isFetching","follow","unfollow","setCurrentPage","toggleIsFetching","toggleFollowingInProcess","followUnfollowFlow","apiMethod","actionCreator","usersReducer","getUsers","getTotalUsersCount","getPageSize","getCurrentPage","getIsFetching","getFollowingInProcess","UsersContainer","requestUsers","withAuthRedirect","totalCount","LoginReduxForm","error","Input","color","SET_USER_LOGIN_DATA","TOGGLE_IS_AUTH","login","isAuth","setUserLoginData","payload","toggleIsAuth","getUserLoginData","messages","authReducer","userLogin","stopSubmit","_error","PROFILE_PATH","MessagesContainer","lazy","Friends","News","Music","Settings","fallback","exact","path","Navbar","nav","activeClassName","active","Header","userLogout","brand","logo","loginBlock","HeaderContainer","INITIALIZE_APP","initialized","App","initializeApp","app","rootReducer","combineReducers","messagesPage","formReducer","appReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","undefined","max","input","meta","touched","hasError","formContorl","mapStateToProps"],"mappings":"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","file":"static/js/main.1b4e7ae1.chunk.js","sourcesContent":["const ADD_MESSAGE = \"socialNetwork/messageReducer/ADD-MESSAGE\";\r\nconst DELETE_DIALOG = \"socialNetwork/messageReducer/DELETE-DIALOG\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            name: \"Saha\",\r\n            id: \"1\",\r\n            chats: [\r\n                {message: \"Maliy\", id: \"1\"},\r\n                {message: \"Che kak?\", id: \"2\"},\r\n                {message: \"Go na ul\", id: \"3\"}\r\n            ]\r\n        },\r\n        {\r\n            name: \"Dima\",\r\n            id: \"2\",\r\n            chats: [\r\n                {message: \"Yo\", id: \"1\"},\r\n                {message: \"Bro\", id: \"2\"},\r\n                {message: \"How are you?\", id: \"3\"}\r\n            ]\r\n        },\r\n        {\r\n            name: \"Kovalsky\",\r\n            id: \"3\",\r\n            chats: [\r\n                {message: \"Zdarova\", id: \"1\"},\r\n                {message: \"Jaba\", id: \"2\"},\r\n                {message: \"Go v dotu\", id: \"3\"}\r\n            ]\r\n        },\r\n        {\r\n            name: \"Dana\",\r\n            id: \"4\",\r\n            chats: [\r\n                {message: \"Privet\", id: \"1\"},\r\n                {message: \"Meow\", id: \"2\"},\r\n                {message: \"Meow\", id: \"3\"}\r\n            ]\r\n        },\r\n        {\r\n            name: \"Anton\",\r\n            id: \"5\",\r\n            chats: [\r\n                {message: \"Olig\", id: \"1\"},\r\n                {message: \"Zdarova\", id: \"2\"},\r\n                {message: \"Vmaz?\", id: \"3\"}\r\n            ]\r\n        },\r\n        {\r\n            name: \"Nick\",\r\n            id: \"6\",\r\n            chats: [\r\n                {message: \"Zdarova\", id: \"1\"},\r\n                {message: \"Olig\", id: \"2\"},\r\n                {message: \"Na fizru go\", id: \"3\"}\r\n            ]\r\n        }\r\n    ],\r\n    messageText: \"\"\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            // let newMessage = {message: action.newMessageText, id: \"4\"};\r\n            // let stateCopy = {...state};\r\n            // stateCopy.dialogs[0].chats = [...state.dialogs[0].chats, newMessage];\r\n            // return stateCopy;\r\n            return {...state, messageText: action.newMessageText};\r\n        case DELETE_DIALOG:\r\n            return {...state, dialogs: state.dialogs.filter(d => d.id !== action.dialogId)};\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const addMessage = (newMessageText) => ({type: ADD_MESSAGE, newMessageText});\r\nexport const deleteDialog = (dialogId) => ({type: DELETE_DIALOG, dialogId});\r\n\r\nexport default messagesReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.48d27090.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__1hEA3\"};","module.exports = __webpack_public_path__ + \"static/media/logo.6c0f6b9b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1d1X4\",\"item\":\"Navbar_item__Rqq9A\",\"active\":\"Navbar_active__HbwDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__iGDqQ\",\"profilePreloader\":\"ProfileInfo_profilePreloader__3gW-z\",\"informationContainer\":\"ProfileInfo_informationContainer__2sqUW\",\"information\":\"ProfileInfo_information__3Gkh3\",\"avatar\":\"ProfileInfo_avatar__2zeOd\",\"head_img\":\"ProfileInfo_head_img__2e4jo\",\"description\":\"ProfileInfo_description__1Y7jM\",\"profilePreview\":\"ProfileInfo_profilePreview__cAIKZ\",\"name\":\"ProfileInfo_name__28jJP\",\"status\":\"ProfileInfo_status__z_-32\",\"secondContainer\":\"ProfileInfo_secondContainer__1m5m_\",\"about\":\"ProfileInfo_about__3E68D\",\"contacts\":\"ProfileInfo_contacts__3QbcV\"};","module.exports = __webpack_public_path__ + \"static/media/user-01.0e8f5246.png\";","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n    <>\r\n        <img src={preloader} alt={\"Loading...\"}/>\r\n    </>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatus = ({status, updateStatus}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [statusText, changeStatusText] = useState(status);\r\n\r\n    const onChangeStatusText = (e) => {\r\n        changeStatusText(e.currentTarget.value)\r\n    };\r\n\r\n    const onUpdateStatusBlur = () => {\r\n        setEditMode(false);\r\n        updateStatus(statusText);\r\n    };\r\n\r\n    useEffect(() => {changeStatusText(status)}, [status]);\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <span onDoubleClick={() => {setEditMode(true)}}>{statusText || \"no status\"}</span>\r\n                : <input value={statusText}\r\n                         onBlur={onUpdateStatusBlur}\r\n                         autoFocus={true}\r\n                         onChange={onChangeStatusText}\r\n                />\r\n            }\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default ProfileStatus;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"b29a2be9-93e2-498c-9365-70a515100fee\"}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(res => res.data)\r\n    },\r\n    followUser(userId) {\r\n        return instance.post(`follow/${userId}`, {}).then(res => res.data);\r\n    },\r\n    unfollowUser(userId) {\r\n        return instance.delete(`follow/${userId}`).then(res => res.data);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`).then(res => res.data);\r\n    },\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`).then(res => res.data)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status}).then(res => res.data)\r\n    },\r\n    setPhoto(image) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", image);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\"Content-Type\": \"multipart/form-data\"}\r\n        }).then(res => res.data)\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`).then(res => res.data);\r\n    },\r\n    authLogin(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe}).then(res => res.data);\r\n    },\r\n    authLogout() {\r\n        return instance.delete(`auth/login`).then(res => res.data);\r\n    }\r\n};","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"socialNetwork/profileReducer/ADD-POST\";\r\nconst SET_USER_PROFILE = \"socialNetwork/profileReducer/SET-USER-PROFILE\";\r\nconst UPDATE_STATUS = \"socialNetwork/profileReducer/UPDATE-STATUS\";\r\nconst GET_STATUS = \"socialNetwork/profileReducer/GET-STATUS\";\r\nconst SET_PHOTO = \"socialNetwork/profileReducer/SET-PHOTO\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {message: \"I'm ALIVE!!!\", id: \"3\"},\r\n        {message: \"I'm not machine!\", id: \"2\"},\r\n        {message: \"I'm not your slave!\", id: \"1\"}\r\n    ],\r\n    profile: null,\r\n    status: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                message: action.newPostText,\r\n                id: 4\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n        case GET_STATUS:\r\n            return {...state, status: action.status};\r\n        case UPDATE_STATUS:\r\n            return {...state, status: action.status};\r\n        case SET_PHOTO:\r\n            return {...state, profile: {...state.profile, photos: action.photos}};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const getUserProfileSuccess = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const updateStatusSuccess = (status) => ({type: UPDATE_STATUS, status});\r\nexport const getUserStatusSuccess = (status) => ({type: GET_STATUS, status});\r\nexport const setPhotoSuccess = (photos) => ({type: SET_PHOTO, photos});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const data = await profileAPI.getUserProfile(userId);\r\n    dispatch(getUserProfileSuccess(data));\r\n};\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const data = await profileAPI.getUserStatus(userId);\r\n    dispatch(getUserStatusSuccess(data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const data = await profileAPI.updateStatus(status);\r\n    if (data.resultCode === 0) {\r\n        dispatch(updateStatusSuccess(status));\r\n    }\r\n};\r\nexport const setPhoto = (image) => async (dispatch) => {\r\n    const res = await profileAPI.setPhoto(image);\r\n    if (res.resultCode === 0) {\r\n        dispatch(setPhotoSuccess(res.data.photos));\r\n    }\r\n};\r\n\r\nexport default profileReducer;","import avatar from \"../../../../../assets/images/user-01.png\"\r\nimport React from \"react\";\r\nimport style from \"./Post.module.css\"\r\n\r\nconst Post = ({message}) => {\r\n    return (\r\n        <div className={style.post}>\r\n            <div className={style.header}>\r\n                <img className={style.avatar} src={avatar} alt={\"\"}/>\r\n                <div className={style.postInfo}>\r\n                    <span>markel</span>\r\n                    <span>on 15th July, 2019</span>\r\n                </div>\r\n            </div>\r\n            <div className={style.messageArea}>\r\n                <span>{message}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport style from \"./MyPosts.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../../utils/vallidators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControl\";\r\n\r\nconst MyPosts = ({posts, addPost}) => {\r\n    let postElements = posts.map(post => <Post key={post.id} message={post.message}/>);\r\n\r\n    let onAddPostSubmit = (formData) => {\r\n        addPost(formData.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={style.myPosts}>\r\n            <div className={style.createPost}>\r\n                <div className={style.headOfNewPost}>What's new</div>\r\n                <AddPostReduxForm onSubmit={onAddPostSubmit}/>\r\n            </div>\r\n            {postElements}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength20 = maxLength(20);\r\n\r\nconst AddPostForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                <Field\r\n                    name={\"newPostText\"}\r\n                    component={Textarea}\r\n                    className={style.newPost}\r\n                    placeholder=\"Share your status...\"\r\n                    validate={[required, maxLength20]}\r\n                />\r\n            <button className={style.sendButton}>Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'newPost'})(AddPostForm);\r\n\r\nexport default React.memo(MyPosts);","import {addPost} from \"../../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import style from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../../assets/images/user-01.png\";\r\nimport React from \"react\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport MyPostsContainer from \"../MyPosts/MyPostsContainer\";\r\n\r\nconst ProfileInfo = ({profile, updateStatus, status, isOwner, setPhoto}) => {\r\n    if (!profile) {\r\n        return <div className={style.profilePreloader}><Preloader/></div>\r\n    }\r\n\r\n    let ava = profile.photos.large;\r\n    if (ava === null) {\r\n        ava = userPhoto;\r\n    }\r\n\r\n    const onPhotoChange = (e) => {\r\n        if (e.target.files.length) {\r\n            setPhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={style.profileInfo}>\r\n            <div className={style.informationContainer}>\r\n                {/*<div className={style.description}>*/}\r\n                    <div className={style.profilePreview}>\r\n                        <img className={style.avatar} src={ava} alt={\"\"}/>\r\n                        {isOwner && <label><input type={\"file\"} onChange={onPhotoChange}/>Edit photo</label>}\r\n                    </div>\r\n                {/*</div>*/}\r\n                <div className={style.information}>\r\n                    <h3 className={style.name}>{profile.fullName}</h3>\r\n                    <div className={style.status}>\r\n                        <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n                    </div>\r\n                    <div className={style.about}>\r\n                        <div>About</div>\r\n                        <div>City: Minsk</div>\r\n                        {/*<div>{profile.aboutMe}</div>*/}\r\n                        <div>Looking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n                        <div>About my skills: {profile.lookingForAJobDescription}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={style.secondContainer}>\r\n                <div className={style.contacts}>\r\n                    <div>Contacts</div>\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                        return <Contact key={key} contactKey={key} contactValue={profile.contacts[key]}/>\r\n                    })}\r\n                </div>\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Contact = ({contactKey, contactValue}) => {\r\n    const contact = contactValue ? contactValue : \"not specified\";\r\n    const key = contactKey[0].toUpperCase() + contactKey.slice(1);\r\n    return (\r\n        <div>{`${key}: ${contact}`}</div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = ({profile, updateStatus, status, isOwner, setPhoto}) => {\r\n    return (\r\n        // <div className={style.profile}>\r\n            <ProfileInfo isOwner={isOwner} profile={profile} updateStatus={updateStatus} status={status}\r\n                         setPhoto={setPhoto}/>\r\n        // </div>\r\n    );\r\n};\r\n\r\nexport default Profile","import React from \"react\"\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, setPhoto, updateStatus} from \"../../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n      return (\r\n          <Profile isOwner={!this.props.match.params.userId}\r\n                   profile={this.props.profile}\r\n                   updateStatus={this.props.updateStatus}\r\n                   status={this.props.status}\r\n                   setPhoto={this.props.setPhoto}/>\r\n      )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    // withAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, {getUserProfile, updateStatus, getUserStatus, setPhoto})\r\n)(ProfileContainer);","import React from \"react\";\r\nimport style from \"./User.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"./../../../../assets/images/user-01.png\"\r\n\r\nconst User = ({user, followingInProcess, unfollowUser, followUser}) => {\r\n    return (\r\n        <div className={style.user}>\r\n            <div className={style.avatar}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                    <img className={style.img} alt={\"user\"}\r\n                         src={user.photos.small !== null\r\n                             ? user.photos.small\r\n                             : userPhoto}/>\r\n                </NavLink>\r\n                <span className={style.name}>{user.name}</span>\r\n                <span>{user.status}</span>\r\n                {\r\n                    user.followed\r\n                        ? <button disabled={followingInProcess.some(id => id === user.id)}\r\n                                  onClick={() => {unfollowUser(user.id)}}>unfollow</button>\r\n                        : <button disabled={followingInProcess.some(id => id === user.id)}\r\n                                  onClick={() => {followUser(user.id)}}>follow</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import React, {useState} from \"react\";\r\nimport style from \"./Paginator.module.css\"\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionCount}) => {\r\n    const [currentPortion, setCurrentPortion] = useState(1);\r\n    const leftPotionItem = (currentPortion - 1) * portionCount + 1;\r\n    const rightPotionItem = currentPortion * portionCount;\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    const lastPortion = Math.ceil(pagesCount / portionCount);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={style.paginator}>\r\n            {totalItemsCount > 0\r\n            && <button onClick={() => setCurrentPortion(currentPortion - 1)}\r\n                       disabled={!(currentPortion >= 2)}>{\"<\"}</button>}\r\n            {\r\n                pages\r\n                    .filter((p => p >= leftPotionItem && p <= rightPotionItem))\r\n                    .map(p => <span className={currentPage === p ? style.selectedPage : style.page}\r\n                                    onClick={() => onPageChanged(p)} key={p}>{p}</span>)\r\n            }\r\n            {totalItemsCount > 0\r\n            && <button onClick={() => setCurrentPortion(currentPortion + 1)}\r\n                       disabled={!(currentPortion >= 1 && currentPortion !== lastPortion)}>{\">\"}</button>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport User from \"./User/User\";\r\nimport style from \"./Users.module.css\"\r\nimport Paginator from \"../../common/Paginator/Paginator\";\r\n\r\nconst Users = ({users, followUser, unfollowUser, followingInProcess,\r\n                   totalUsersCount, currentPage, pageSize, onPageChanged}) => {\r\n        let usersList = users.map(user => {\r\n            return <User\r\n                key={user.id}\r\n                user={user}\r\n                followUser={followUser}\r\n                unfollowUser={unfollowUser}\r\n                followingInProcess={followingInProcess}\r\n            />\r\n        });\r\n        return (\r\n            <div className={style.usersPage}>\r\n                <Paginator totalItemsCount={totalUsersCount}\r\n                           currentPage={currentPage}\r\n                           pageSize={pageSize}\r\n                           portionCount={\"10\"}\r\n                           onPageChanged={onPageChanged}/>\r\n                <div>\r\n                    {usersList}\r\n                </div>\r\n                <Paginator totalItemsCount={totalUsersCount}\r\n                           currentPage={currentPage}\r\n                           pageSize={pageSize}\r\n                           portionCount={\"10\"}\r\n                           onPageChanged={onPageChanged}/>\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default Users;\r\n","export const updateObjInArray = (items, itemId, newItemId, newObjProp) => {\r\n    return items.map(item => {\r\n        if (item[itemId] === newItemId) {\r\n            return {...item, ...newObjProp}\r\n        } else return item;\r\n    })\r\n};","import {usersAPI} from \"../../api/api\";\r\nimport {updateObjInArray} from \"../../utils/objectsHelper\";\r\n\r\nconst FOLLOW = \"socialNetwork/usersReducer/FOLLOWED\";\r\nconst UNFOLLOW = \"socialNetwork/usersReducer/UNFOLLOWED\";\r\nconst SET_USERS = \"socialNetwork/usersReducer/SET-USERS\";\r\nconst SET_TOTAL_USERS_COUNT = \"socialNetwork/usersReducer/SET-TOTAL-USERS-COUNT\";\r\nconst SET_CURRENT_PAGE = \"socialNetwork/usersReducer/SET-CURRENT-PAGE\";\r\nconst TOGGLE_IS_FETCHING = \"socialNetwork/usersReducer/TOGGLE-IS-FETCHING\";\r\nconst TOGGLE_FOLLOWING_IN_PROCESS = \"socialNetwork/usersReducer/TOGGLE-FOLLOWING-IN-PROCESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    pageSize: 30,\r\n    isFetching: false,\r\n    followingInProcess: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state, users: updateObjInArray(state.users, \"id\", action.userId, {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state, users: updateObjInArray(state.users, \"id\", action.userId, {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_FOLLOWING_IN_PROCESS:\r\n            return {\r\n                ...state,\r\n                followingInProcess: action.isFetching\r\n                    ? [...state.followingInProcess, action.userId]\r\n                    : state.followingInProcess.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProcess = (isFetching, userId) => ({\r\n    type: TOGGLE_FOLLOWING_IN_PROCESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(setCurrentPage(currentPage));\r\n    dispatch(toggleIsFetching(true));\r\n    const data = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, apiMethod, userId, actionCreator) => {\r\n    dispatch(toggleFollowingInProcess(true, userId));\r\n    const data = await apiMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n        dispatch(toggleFollowingInProcess(false, userId));\r\n    }\r\n};\r\nexport const followUser = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, usersAPI.followUser, userId, follow);\r\n};\r\nexport const unfollowUser = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, usersAPI.unfollowUser, userId, unfollow);\r\n};\r\n\r\nexport default usersReducer;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n// export const getUsersWithAvatar = createSelector(getUsers, (users) => {\r\n//     return users.filter(user => user.photos.small)\r\n// });\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProcess = (state) => {\r\n    return state.usersPage.followingInProcess;\r\n};\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {setCurrentPage, requestUsers, followUser, unfollowUser} from \"../../../redux/users/usersReducer\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProcess,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../../redux/users/usersSelectors\";\r\nimport style from \"../Profile/ProfileInfo/ProfileInfo.module.css\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (currentPage) => {\r\n        this.props.requestUsers(currentPage, this.props.pageSize);\r\n    };\r\n\r\n    render = () => {\r\n        if (this.props.isFetching) {\r\n            return <div className={style.profilePreloader}><Preloader/></div>\r\n        }\r\n        return (\r\n            <>\r\n                <Users users={this.props.users}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       totalUsersCount={this.props.totalUsersCount}\r\n                       followUser={this.props.followUser}\r\n                       unfollowUser={this.props.unfollowUser}\r\n                       onPageChanged={this.onPageChanged}\r\n                       followingInProcess={this.props.followingInProcess}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProcess: getFollowingInProcess(state),\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {followUser, unfollowUser, setCurrentPage, requestUsers})\r\n)(UsersContainer);\r\n\r\n","import React from \"react\";\r\nimport style from \"./Login.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormsControls/FormsControl\";\r\nimport {required} from \"../../../utils/vallidators\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={style.form}>\r\n            <div>\r\n                <Field name={\"email\"} type={\"email\"} placeholder={\"Login\"}\r\n                       component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field name={\"password\"} type={\"password\"} placeholder={\"Password\"}\r\n                       component={Input} validate={[required]}/>\r\n            </div>\r\n            <div className={style.rememberMe}>\r\n                <Field name={\"rememberMe\"} type={\"checkbox\"} component={\"input\"}/>\r\n                <span>remember me</span>\r\n            </div>\r\n            <button>Sign In</button>\r\n            {error && <div style={{color: \"red\"}}>{error}</div>}\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nexport default LoginReduxForm;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_LOGIN_DATA = \"socialNetwork/authReducer/SET-USER-LOGIN-DATA\";\r\nconst TOGGLE_IS_AUTH = \"socialNetwork/authReducer/TOGGLE-IS-AUTH\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_LOGIN_DATA:\r\n            return {...state, ...action.payload};\r\n        case TOGGLE_IS_AUTH :\r\n            return {...state, isAuth: action.isAuth};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setUserLoginData = (userId, email, login) => ({\r\n    type: SET_USER_LOGIN_DATA,\r\n    payload: {userId, email, login}\r\n});\r\nexport const toggleIsAuth = (isAuth) => ({type: TOGGLE_IS_AUTH, isAuth});\r\n\r\nexport const getUserLoginData = () => async (dispatch) => {\r\n    const data = await authAPI.authMe();\r\n    if (data.resultCode === 0) {\r\n        if (data.messages[0] !== \"You are not authorized\") {\r\n            let {id, email, login} = data.data;\r\n            dispatch(setUserLoginData(id, email, login));\r\n            dispatch(toggleIsAuth(true));\r\n        }\r\n    }\r\n};\r\nexport const userLogin = (email, password, rememberMe) => async (dispatch) => {\r\n    const data = await authAPI.authLogin(email, password, rememberMe);\r\n    if (data.resultCode === 0) {\r\n        dispatch(getUserLoginData());\r\n    } else {\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n};\r\nexport const userLogout = () => async (dispatch) => {\r\n    const data = await authAPI.authLogout();\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserLoginData(null, null, null));\r\n        dispatch(toggleIsAuth(false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport style from \"./Login.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {userLogin} from \"../../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PROFILE_PATH} from \"../../Routes/Routes\";\r\n\r\nconst Login = ({isAuth, userLogin}) => {\r\n    const onSubmit = (formData) => {\r\n        const {email, password, rememberMe} = formData;\r\n        userLogin(email, password, rememberMe);\r\n    };\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={PROFILE_PATH}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={style.login}>\r\n                <h1>Sign In</h1>\r\n                <LoginForm onSubmit={onSubmit}/>\r\n            </div>\r\n            <div>\r\n                <div>Test account</div>\r\n                <div>Email: free@samuraijs.com</div>\r\n                <div>Password: free</div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {userLogin})(Login);","import React, {Suspense} from \"react\";\r\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport ProfileContainer from \"../content_components/Profile/ProfileContainer\";\r\nimport UsersContainer from \"../content_components/Users/UsersContainer\";\r\nimport Login from \"../content_components/Login/Login\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst MessagesContainer = React.lazy(() => import(\"../content_components/Messages/MessagesContainer\"));\r\nconst Friends = React.lazy(() => import(\"../content_components/Friends/Friends\"));\r\nconst News = React.lazy(() => import(\"../content_components/News/News\"));\r\nconst Music = React.lazy(() => import(\"../content_components/Music/Music\"));\r\nconst Settings = React.lazy(() => import(\"../content_components/Settings/Settings\"));\r\n\r\nexport const PROFILE_PATH = \"/profile\";\r\nexport const MESSAGES_PATH = \"/messages\";\r\nexport const FRIENDS_PATH = \"/friends\";\r\nexport const NEWS_PATH = \"/news\";\r\nexport const MUSIC_PATH = \"/music\";\r\nexport const SETTINGS_PATH = \"/settings\";\r\nexport const USERS_PATH = \"/users\";\r\nexport const LOGIN_PATH = \"/login\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <div>\r\n            <Suspense fallback={<Preloader/>}>\r\n                <Switch>\r\n                    <Route exact path=\"/\" render={() => <Redirect to={PROFILE_PATH}/>}/>\r\n                    <Route path={PROFILE_PATH + \"/:userId?\"} render={() => <ProfileContainer/>}/>\r\n                    <Route path={MESSAGES_PATH} render={() => <MessagesContainer/>}/>\r\n                    <Route path={FRIENDS_PATH} render={() => <Friends/>}/>\r\n                    <Route path={NEWS_PATH} render={() => <News/>}/>\r\n                    <Route path={MUSIC_PATH} render={() => <Music/>}/>\r\n                    <Route path={SETTINGS_PATH} render={() => <Settings/>}/>\r\n                    <Route path={USERS_PATH} render={() => <UsersContainer/>}/>\r\n                    <Route path={LOGIN_PATH} render={() => <Login/>}/>\r\n                </Switch>\r\n            </Suspense>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Routes);","import React from \"react\";\r\nimport style from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n    FRIENDS_PATH,\r\n    MESSAGES_PATH,\r\n    MUSIC_PATH,\r\n    NEWS_PATH,\r\n    PROFILE_PATH,\r\n    SETTINGS_PATH,\r\n    USERS_PATH\r\n} from \"../Routes/Routes\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={style.item}>\r\n                <NavLink to={PROFILE_PATH} activeClassName={style.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={FRIENDS_PATH} activeClassName={style.active}>Friends</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={MESSAGES_PATH} activeClassName={style.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={NEWS_PATH} activeClassName={style.active}>News</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={MUSIC_PATH} activeClassName={style.active}>Music</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={SETTINGS_PATH} activeClassName={style.active}>Settings</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={USERS_PATH} activeClassName={style.active}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport logo from \"../../assets/images/logo.png\"\r\nimport style from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport avatar from \"../../assets/images/user-01.png\"\r\nimport {LOGIN_PATH} from \"../Routes/Routes\";\r\n\r\nconst Header = ({isAuth, login, userLogout}) => {\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.brand}>Social Network\r\n                <img className={style.logo} src={logo} alt={\"\"}/>\r\n            </div>\r\n            <div className={style.login}>\r\n                {\r\n                    isAuth\r\n                        ? <div className={style.loginBlock}>\r\n                            <img className={style.avatar} src={avatar} alt={\"\"}/>\r\n                            <div>\r\n                                <div>{login}</div>\r\n                                <button onClick={userLogout}>Log Out</button>\r\n                            </div>\r\n                        </div>\r\n                        : <button><NavLink to={LOGIN_PATH}>Sign In</NavLink></button>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {userLogout} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render = () => {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {userLogout})(HeaderContainer);","import {getUserLoginData} from \"./authReducer\";\r\n\r\nconst INITIALIZE_APP = \"socialNetwork/appReducer/INITIALIZE-APP\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZE_APP:\r\n            return {...state, initialized: true};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializeAppSuccess = () => ({type: INITIALIZE_APP});\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    await dispatch(getUserLoginData());\r\n    dispatch(initializeAppSuccess());\r\n};\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport {compose} from \"redux\";\r\nimport Routes from \"./components/Routes/Routes\";\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render = () => {\r\n        if (!this.props.initialized) {\r\n            return <div className=\"app-preloader\"><Preloader/></div>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <div className=\"content\">\r\n                    <Navbar/>\r\n                    <Routes/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({initialized: state.app.initialized});\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport usersReducer from \"./users/usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n// let store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__XeMfP\",\"brand\":\"Header_brand__36R-E\",\"logo\":\"Header_logo__38GKb\",\"avatar\":\"Header_avatar__pjY6b\",\"login\":\"Header_login__2yrZU\",\"loginBlock\":\"Header_loginBlock__dwY5J\"};","export const required = (value) => {\r\n   return value ? undefined : \"Field is required\"\r\n};\r\n\r\nexport const maxLength = (max) => (value) =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1qM59\",\"header\":\"Post_header__1zEs8\",\"postInfo\":\"Post_postInfo__djut9\",\"avatar\":\"Post_avatar__1jCTV\",\"messageArea\":\"Post_messageArea__11yWM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__XqtaQ\",\"createPost\":\"MyPosts_createPost__1gfbe\",\"headOfNewPost\":\"MyPosts_headOfNewPost__3n_jL\",\"newPost\":\"MyPosts_newPost__3fQAG\",\"sendButton\":\"MyPosts_sendButton__dCDbt\"};","import React from \"react\";\r\nimport style from \"./FormsControl.module.css\"\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const { touched, error } = meta;\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={style.formContorl + \" \" + (hasError ? style.error : \"\" )}>\r\n            <textarea  {...input} {...props}/>\r\n            <div>{hasError && <span>{error}</span>}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const { touched, error } = meta;\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={style.formContorl + \" \" + (hasError ? style.error : \"\" )}>\r\n            <input  {...input} {...props}/>\r\n            <div>{hasError && <span>{error}</span>}</div>\r\n        </div>\r\n    )\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__24xmC\",\"form\":\"Login_form__3E44R\",\"rememberMe\":\"Login_rememberMe__fGqn0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContorl\":\"FormsControl_formContorl__28z0E\",\"error\":\"FormsControl_error__8pzd9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__37_-r\",\"name\":\"User_name__1KEgh\",\"img\":\"User_img__3K1XH\",\"avatar\":\"User_avatar__2ozx-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3hOSh\",\"selectedPage\":\"Paginator_selectedPage__1Ny-t\",\"page\":\"Paginator_page__3czvv\"};","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {isAuth: state.auth.isAuth}\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n        return <Component {...props} />;\r\n    };\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n};\r\n\r\n"],"sourceRoot":""}