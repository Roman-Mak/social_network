{"version":3,"sources":["components/content_components/Messages/Dialog/Dialog.module.css","api/api.js","components/content_components/Users/User/User.jsx","components/content_components/Users/Users.jsx","redux/users/usersSelectors.js","components/common/Paginator/Paginator.jsx","components/content_components/Users/UsersContainer.jsx","assets/images/preloader.svg","components/common/Preloader/Preloader.module.css","assets/images/logo.png","components/content_components/Messages/Chat/Chat.module.css","utils/vallidators.js","components/content_components/Profile/ProfileInfo/ProfileStatus.jsx","components/content_components/Profile/MyPosts/Post/Post.jsx","components/common/FormsControls/FormsControl.jsx","components/content_components/Profile/MyPosts/MyPosts.jsx","components/content_components/Profile/MyPosts/MyPostsContainer.jsx","components/content_components/Profile/ProfileInfo/ProfileInfo.jsx","components/content_components/Profile/Profile.jsx","components/content_components/Profile/ProfileContainer.jsx","components/content_components/Login/LoginForm.jsx","components/content_components/Login/Login.jsx","components/content_components/Messages/Dialog/Dialog.jsx","components/content_components/Messages/Chat/Chat.jsx","components/content_components/Messages/Messages.jsx","components/content_components/Messages/MessagesContainer.jsx","components/Routes/Routes.jsx","components/Navbar/Navbar.module.css","components/content_components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/Preloader/Preloader.jsx","assets/images/user-01.png","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/appReducer.js","App.js","redux/redux-store.js","serviceWorker.js","index.js","redux/profileReducer.js","components/content_components/Users/User/User.module.css","redux/authReducer.js","components/content_components/Messages/Messages.module.css","utils/objectsHelper.js","redux/users/usersReducer.js","components/Header/Header.module.css","hoc/withAuthRedirect.jsx","redux/messagesReducer.js","components/content_components/Profile/MyPosts/Post/Post.module.css","components/content_components/Profile/MyPosts/MyPosts.module.css","components/content_components/Login/Login.module.css","components/common/FormsControls/FormsControl.module.css","components/content_components/Users/Users.module.css","components/common/Paginator/Paginator.module.css"],"names":["module","exports","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","isFriend","get","then","res","data","followUser","userId","post","unfollowUser","delete","profileAPI","getUserProfile","getUserStatus","updateStatus","status","put","setPhoto","image","formData","FormData","append","authAPI","authMe","authLogin","email","password","rememberMe","authLogout","messagesAPI","getDialogs","getDialog","startDialog","getMessages","sendMessage","body","getMessageViewed","messageId","spam","deleteMessage","restoreMessage","getNewMessagesCount","User","user","followingInProcess","useState","openDialog","setOpenDialog","to","MESSAGES_PATH","id","className","style","avatar","PROFILE_PATH","img","alt","src","photos","small","userPhoto","name","followed","followBtn","disabled","some","onClick","sendBtn","Users","users","usersList","map","key","usersPage","state","getTotalUsersCount","totalUsersCount","getPageSize","getCurrentPage","getIsFetching","isFetching","getFollowingInProcess","Paginator","totalItemsCount","onPageChanged","portionCount","currentPortion","setCurrentPortion","leftPotionItem","rightPotionItem","pagesCount","Math","ceil","lastPortion","pages","i","push","paginator","filter","p","selectedPage","page","UsersContainer","props","requestUsers","render","container","Preloader","this","setCurrentPage","React","Component","compose","withAuthRedirect","connect","max","ProfileStatus","editMode","setEditMode","statusText","changeStatusText","useEffect","value","onBlur","autoFocus","onChange","e","currentTarget","onDoubleClick","Post","message","header","postInfo","messageArea","required","undefined","Textarea","input","meta","touched","error","hasError","formContorl","Input","maxLength20","length","AddPostReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","newPost","placeholder","validate","sendButton","memo","posts","addPost","postElements","myPosts","createPost","headOfNewPost","newPostText","MyPostsContainer","profilePage","MyPosts","Contact","contactKey","contactValue","contact","toUpperCase","slice","ProfileInfo","profile","isOwner","profilePreloader","ava","large","profileInfo","informationContainer","profilePreview","type","target","files","information","fullName","about","lookingForAJob","lookingForAJobDescription","secondContainer","contacts","Object","keys","Profile","ProfileContainer","refreshProfile","match","params","history","prevProps","prevState","snapshot","withRouter","auth","LoginReduxForm","color","isAuth","userLogin","login","Dialog","dialog","activeClassName","active","Chat","sender","senderId","messageTime","addedAt","yourId","useSelector","chat","corner","content","time","messageYour","messageAreaYour","nameYour","cornerYour","AddMessageReduxForm","width","height","resize","Messages","dialogs","messages","selectedDialogId","resetForm","dialogsIsFetching","messagesIsFetching","dialogsElements","d","userName","messagesItems","m","senderName","chats","noMessages","newMessageText","select","MessagesContainer","reset","initDialogs","Number","updateDialog","messagesPage","Friends","lazy","Settings","FRIENDS_PATH","SETTINGS_PATH","USERS_PATH","LOGIN_PATH","fallback","exact","path","preloader","Navbar","nav","item","Header","userLogout","brand","logo","loginBlock","HeaderContainer","INITIALIZE_APP","initialState","initialized","authReducer","action","App","Routes","initializeApp","app","dispatch","a","getUserLoginData","rootReducer","combineReducers","profileReducer","messagesReducer","usersReducer","formReducer","appReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","ADD_POST","SET_USER_PROFILE","UPDATE_STATUS","GET_STATUS","SET_PHOTO","updateStatusSuccess","resultCode","SET_USER_LOGIN_DATA","TOGGLE_IS_AUTH","setUserLoginData","payload","toggleIsAuth","stopSubmit","_error","updateObjInArray","items","itemId","newItemId","newObjProp","FOLLOW","UNFOLLOW","SET_USERS","SET_TOTAL_USERS_COUNT","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_IN_PROCESS","follow","unfollow","toggleIsFetching","toggleFollowingInProcess","totalCount","followUnfollowFlow","apiMethod","actionCreator","mapStateToProps","DELETE_DIALOG","GET_DIALOGS","PUT_UP_DIALOG","SET_CURRENT_DIALOG","GET_MESSAGES","SEND_MESSAGE","DIALOGS_IS_FETCHING","MESSAGES_IS_FETCHING","getDialogsSuccess","putUpDialog","setCurrentDialog","getState","find","result","dialogId"],"mappings":"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","file":"static/js/main.bc67ff85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__194ML\",\"active\":\"Dialog_active__3Ae0L\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"b29a2be9-93e2-498c-9365-70a515100fee\"}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize, isFriend) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}&friend=${isFriend}`).then(res => res.data)\r\n    },\r\n    followUser(userId) {\r\n        return instance.post(`follow/${userId}`, {}).then(res => res.data);\r\n    },\r\n    unfollowUser(userId) {\r\n        return instance.delete(`follow/${userId}`).then(res => res.data);\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`).then(res => res.data);\r\n    },\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`).then(res => res.data)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status}).then(res => res.data)\r\n    },\r\n    setPhoto(image) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", image);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\"Content-Type\": \"multipart/form-data\"}\r\n        }).then(res => res.data)\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`).then(res => res.data);\r\n    },\r\n    authLogin(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe}).then(res => res.data);\r\n    },\r\n    authLogout() {\r\n        return instance.delete(`auth/login`).then(res => res.data);\r\n    }\r\n};\r\n\r\nexport const messagesAPI = {\r\n    getDialogs() {\r\n        return instance.get(`dialogs`).then(res => res.data);\r\n    },\r\n    getDialog(userId) {\r\n        return instance.get(`dialogs/${userId}`).then(res => res.data);\r\n    },\r\n    startDialog(userId) {\r\n        return instance.put(`dialogs/${userId}`).then(res => res.data);\r\n    },\r\n    getMessages(userId) {\r\n        return instance.get(`dialogs/${userId}/messages`).then(res => res.data);\r\n    },\r\n    sendMessage(userId, body) {\r\n        return instance.post(`dialogs/${userId}/messages`, {body}).then(res => res.data);\r\n    },\r\n    getMessageViewed(messageId) {\r\n        return instance.get(`dialogs/messages/${messageId}/viewed`).then(res => res.data);\r\n    },\r\n    spam(messageId) {\r\n        return instance.post(`dialogs/messages/${messageId}/spam`).then(res => res.data);\r\n    },\r\n    deleteMessage(messageId) {\r\n        return instance.delete(`dialogs/messages/${messageId}`).then(res => res.data);\r\n    },\r\n    restoreMessage(messageId) {\r\n        return instance.put(`dialogs/messages/${messageId}`).then(res => res.data);\r\n    },\r\n    getNewMessagesCount() {\r\n        return instance.get(`dialogs/messages/new/count`).then(res => res.data);\r\n    }\r\n};","import React, {useState} from \"react\";\r\nimport style from \"./User.module.css\"\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport userPhoto from \"./../../../../assets/images/user-01.png\"\r\nimport {MESSAGES_PATH, PROFILE_PATH} from \"../../../Routes/Routes\";\r\n\r\nconst User = ({user, followingInProcess, unfollowUser, followUser}) => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    if (openDialog) {\r\n        return <Redirect to={`${MESSAGES_PATH}/${user.id}`}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.user}>\r\n            <div className={style.avatar}>\r\n                <NavLink to={`${PROFILE_PATH}/${user.id}`}>\r\n                    <img className={style.img} alt={\"user\"}\r\n                         src={user.photos.small !== null\r\n                             ? user.photos.small\r\n                             : userPhoto}/>\r\n                </NavLink>\r\n                <span className={style.name}>{user.name}</span>\r\n                <span className={style.status}>{user.status}</span>\r\n                {\r\n                    user.followed\r\n                        ? <button className={style.followBtn}\r\n                                  disabled={followingInProcess.some(id => id === user.id)}\r\n                                  onClick={() => {unfollowUser(user.id)}}>unfollow</button>\r\n                        : <button className={style.followBtn}\r\n                                  disabled={followingInProcess.some(id => id === user.id)}\r\n                                  onClick={() => {followUser(user.id)}}>follow</button>\r\n                }\r\n                <button className={style.sendBtn} onClick={() => setOpenDialog(true)}>Send Message</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport User from \"./User/User\";\r\nimport style from \"./Users.module.css\"\r\n\r\nconst Users = ({users, followUser, unfollowUser, followingInProcess,}) => {\r\n    let usersList = users.map(user => {\r\n        return <User key={user.id} user={user} followUser={followUser} unfollowUser={unfollowUser}\r\n            followingInProcess={followingInProcess}/>\r\n    });\r\n    return (\r\n        <div className={style.usersPage}>\r\n            <div>\r\n                {usersList}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;\r\n","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n// export const getUsersWithAvatar = createSelector(getUsers, (users) => {\r\n//     return users.filter(user => user.photos.small)\r\n// });\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProcess = (state) => {\r\n    return state.usersPage.followingInProcess;\r\n};\r\n","import React, {useState} from \"react\";\r\nimport style from \"./Paginator.module.css\"\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionCount}) => {\r\n    const [currentPortion, setCurrentPortion] = useState(1);\r\n    const leftPotionItem = (currentPortion - 1) * portionCount + 1;\r\n    const rightPotionItem = currentPortion * portionCount;\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    const lastPortion = Math.ceil(pagesCount / portionCount);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={style.paginator}>\r\n            {totalItemsCount > 0\r\n            && <button onClick={() => setCurrentPortion(currentPortion - 1)}\r\n                       disabled={!(currentPortion >= 2)}>{\"<\"}</button>}\r\n            {\r\n                pages\r\n                    .filter((p => p >= leftPotionItem && p <= rightPotionItem))\r\n                    .map(p => <span className={currentPage === p ? style.selectedPage : style.page}\r\n                                    onClick={() => onPageChanged(p)} key={p}>{p}</span>)\r\n            }\r\n            {totalItemsCount > 0\r\n            && <button onClick={() => setCurrentPortion(currentPortion + 1)}\r\n                       disabled={!(currentPortion >= 1 && currentPortion !== lastPortion)}>{\">\"}</button>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport style from \"./Users.module.css\"\r\nimport Users from \"./Users\";\r\nimport {setCurrentPage, requestUsers, followUser, unfollowUser} from \"../../../redux/users/usersReducer\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProcess,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../../redux/users/usersSelectors\";\r\nimport Paginator from \"../../common/Paginator/Paginator\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    isFriend = !!this.props.isFriend;\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize, this.isFriend);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setCurrentPage(1);\r\n    }\r\n\r\n    onPageChanged = (currentPage) => {\r\n        this.props.requestUsers(currentPage, this.props.pageSize, this.isFriend);\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={style.container}>\r\n                {this.props.totalUsersCount > this.props.pageSize\r\n                && <Paginator totalItemsCount={this.props.totalUsersCount}\r\n                              currentPage={this.props.currentPage}\r\n                              pageSize={this.props.pageSize}\r\n                              portionCount={\"10\"}\r\n                              onPageChanged={this.onPageChanged}/>}\r\n                {this.props.isFetching\r\n                    ? <div><Preloader/></div>\r\n                    : <Users users={this.props.users}\r\n                             followUser={this.props.followUser}\r\n                             unfollowUser={this.props.unfollowUser}\r\n                             followingInProcess={this.props.followingInProcess}\r\n                    />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProcess: getFollowingInProcess(state),\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {followUser, unfollowUser, setCurrentPage, requestUsers})\r\n)(UsersContainer);\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.48d27090.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__fCSO8\"};","module.exports = __webpack_public_path__ + \"static/media/logo.6c0f6b9b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__3p7dD\",\"message\":\"Chat_message__1tJBV\",\"messageYour\":\"Chat_messageYour__3BOY7\",\"corner\":\"Chat_corner__S10fm\",\"cornerYour\":\"Chat_cornerYour__1h0ab\",\"messageArea\":\"Chat_messageArea__xJrOV\",\"messageAreaYour\":\"Chat_messageAreaYour__3QI3f\",\"name\":\"Chat_name__3q-yl\",\"nameYour\":\"Chat_nameYour__1yP_j\",\"content\":\"Chat_content__C0fOK\",\"time\":\"Chat_time__3cHN2\"};","export const required = (value) => {\r\n   return value ? undefined : \"Field is required\"\r\n};\r\n\r\nexport const maxLength = (max) => (value) =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatus = ({status, updateStatus}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [statusText, changeStatusText] = useState(status);\r\n\r\n    const onChangeStatusText = (e) => {\r\n        changeStatusText(e.currentTarget.value)\r\n    };\r\n\r\n    const onUpdateStatusBlur = () => {\r\n        setEditMode(false);\r\n        updateStatus(statusText);\r\n    };\r\n\r\n    useEffect(() => {changeStatusText(status)}, [status]);\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <span onDoubleClick={() => {setEditMode(true)}}>{statusText || \"no status\"}</span>\r\n                : <input value={statusText}\r\n                         onBlur={onUpdateStatusBlur}\r\n                         autoFocus={true}\r\n                         onChange={onChangeStatusText}\r\n                />\r\n            }\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default ProfileStatus;","import avatar from \"../../../../../assets/images/user-01.png\"\r\nimport React from \"react\";\r\nimport style from \"./Post.module.css\"\r\n\r\nconst Post = ({message}) => {\r\n    return (\r\n        <div className={style.post}>\r\n            <div className={style.header}>\r\n                <img className={style.avatar} src={avatar} alt={\"\"}/>\r\n                <div className={style.postInfo}>\r\n                    <span>markel</span>\r\n                    <span>on 15th July, 2019</span>\r\n                </div>\r\n            </div>\r\n            <div className={style.messageArea}>\r\n                <span>{message}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post","import React from \"react\";\r\nimport style from \"./FormsControl.module.css\"\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const { touched, error } = meta;\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={style.formContorl + \" \" + (hasError ? style.error : \"\" )}>\r\n            <textarea  {...input} {...props}/>\r\n            <div>{hasError && <span>{error}</span>}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const { touched, error } = meta;\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={style.formContorl + \" \" + (hasError ? style.error : \"\" )}>\r\n            <input  {...input} {...props}/>\r\n            <div>{hasError && <span>{error}</span>}</div>\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport style from \"./MyPosts.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../../utils/vallidators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControl\";\r\n\r\nconst MyPosts = ({posts, addPost}) => {\r\n    let postElements = posts.map(post => <Post key={post.id} message={post.message}/>);\r\n\r\n    let onAddPostSubmit = (formData) => {\r\n        addPost(formData.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={style.myPosts}>\r\n            <div className={style.createPost}>\r\n                <div className={style.headOfNewPost}>What's new</div>\r\n                <AddPostReduxForm onSubmit={onAddPostSubmit}/>\r\n            </div>\r\n            {postElements}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength20 = maxLength(20);\r\n\r\nconst AddPostForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                <Field\r\n                    name={\"newPostText\"}\r\n                    component={Textarea}\r\n                    className={style.newPost}\r\n                    placeholder=\"Share your status...\"\r\n                    validate={[required, maxLength20]}\r\n                />\r\n            <button className={style.sendButton}>Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'newPost'})(AddPostForm);\r\n\r\nexport default React.memo(MyPosts);","import {addPost} from \"../../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import style from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../../assets/images/user-01.png\";\r\nimport React from \"react\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport MyPostsContainer from \"../MyPosts/MyPostsContainer\";\r\n\r\nconst ProfileInfo = ({profile, updateStatus, status, isOwner, setPhoto}) => {\r\n    if (!profile) {\r\n        return <div className={style.profilePreloader}><Preloader/></div>\r\n    }\r\n\r\n    let ava = profile.photos.large;\r\n    if (ava === null) {\r\n        ava = userPhoto;\r\n    }\r\n\r\n    const onPhotoChange = (e) => {\r\n        if (e.target.files.length) {\r\n            setPhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={style.profileInfo}>\r\n            <div className={style.informationContainer}>\r\n                {/*<div className={style.description}>*/}\r\n                    <div className={style.profilePreview}>\r\n                        <img className={style.avatar} src={ava} alt={\"\"}/>\r\n                        {isOwner && <label><input type={\"file\"} onChange={onPhotoChange}/>Edit photo</label>}\r\n                    </div>\r\n                {/*</div>*/}\r\n                <div className={style.information}>\r\n                    <h3 className={style.name}>{profile.fullName}</h3>\r\n                    <div className={style.status}>\r\n                        <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n                    </div>\r\n                    <div className={style.about}>\r\n                        <div>About</div>\r\n                        <div>City: Minsk</div>\r\n                        {/*<div>{profile.aboutMe}</div>*/}\r\n                        <div>Looking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n                        <div>About my skills: {profile.lookingForAJobDescription}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={style.secondContainer}>\r\n                <div className={style.contacts}>\r\n                    <div>Contacts</div>\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                        return <Contact key={key} contactKey={key} contactValue={profile.contacts[key]}/>\r\n                    })}\r\n                </div>\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Contact = ({contactKey, contactValue}) => {\r\n    const contact = contactValue ? contactValue : \"not specified\";\r\n    const key = contactKey[0].toUpperCase() + contactKey.slice(1);\r\n    return (\r\n        <div>{`${key}: ${contact}`}</div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = ({profile, updateStatus, status, isOwner, setPhoto}) => {\r\n    return (\r\n        // <div className={style.profile}>\r\n            <ProfileInfo isOwner={isOwner} profile={profile} updateStatus={updateStatus} status={status}\r\n                         setPhoto={setPhoto}/>\r\n        // </div>\r\n    );\r\n};\r\n\r\nexport default Profile","import React from \"react\"\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, setPhoto, updateStatus} from \"../../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n      return (\r\n          <Profile isOwner={!this.props.match.params.userId}\r\n                   profile={this.props.profile}\r\n                   updateStatus={this.props.updateStatus}\r\n                   status={this.props.status}\r\n                   setPhoto={this.props.setPhoto}/>\r\n      )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, {getUserProfile, updateStatus, getUserStatus, setPhoto})\r\n)(ProfileContainer);","import React from \"react\";\r\nimport style from \"./Login.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormsControls/FormsControl\";\r\nimport {required} from \"../../../utils/vallidators\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={style.form}>\r\n            <div>\r\n                <Field name={\"email\"} type={\"email\"} placeholder={\"Login\"}\r\n                       component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field name={\"password\"} type={\"password\"} placeholder={\"Password\"}\r\n                       component={Input} validate={[required]}/>\r\n            </div>\r\n            <div className={style.rememberMe}>\r\n                <Field name={\"rememberMe\"} type={\"checkbox\"} component={\"input\"}/>\r\n                <span>remember me</span>\r\n            </div>\r\n            <button>Sign In</button>\r\n            {error && <div style={{color: \"red\"}}>{error}</div>}\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport style from \"./Login.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {userLogin} from \"../../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PROFILE_PATH} from \"../../Routes/Routes\";\r\n\r\nconst Login = ({isAuth, userLogin}) => {\r\n    const onSubmit = (formData) => {\r\n        const {email, password, rememberMe} = formData;\r\n        userLogin(email, password, rememberMe);\r\n    };\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={PROFILE_PATH}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={style.login}>\r\n                <h1>Sign In</h1>\r\n                <LoginForm onSubmit={onSubmit}/>\r\n            </div>\r\n            <div>\r\n                <div>Test account</div>\r\n                <div>Email: free@samuraijs.com</div>\r\n                <div>Password: free</div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {userLogin})(Login);","import React from \"react\";\r\nimport style from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../../../assets/images/user-01.png\"\r\n\r\nconst Dialog = ({id, name, photos}) => {\r\n    return (\r\n        // <div>\r\n            <NavLink to={\"/messages/\" + id} className={style.dialog} activeClassName={style.active}>\r\n                <img src={photos ? photos : userPhoto} alt={\"avatar\"}/>\r\n                {name}\r\n            </NavLink>\r\n        // </div>\r\n    )\r\n};\r\n\r\nexport default Dialog","import React from \"react\";\r\nimport style from \"./Chat.module.css\"\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst Chat = ({message, sender, senderId, addedAt}) => {\r\n    const messageTime = addedAt.slice(11, 16);\r\n    const yourId = useSelector((state) => state.auth.userId);\r\n    return (\r\n        <div className={style.chat}>\r\n            {yourId !== senderId\r\n                ? <div className={style.message}>\r\n                    <div className={style.corner}/>\r\n                    <div className={style.messageArea}>\r\n                        <div className={style.name}>{sender}</div>\r\n                        <div className={style.content}>{message}</div>\r\n                        <div className={style.time}>{messageTime}</div>\r\n                    </div>\r\n                </div>\r\n                : <div className={style.messageYour}>\r\n                    <div className={style.messageAreaYour}>\r\n                        <div className={style.nameYour}>{sender}</div>\r\n                        <div className={style.content}>{message}</div>\r\n                        <div className={style.time}>{messageTime}</div>\r\n                    </div>\r\n                    <div className={style.cornerYour}/>\r\n                </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\n// const Message = () => {\r\n//     return (\r\n//         <div className={style.message}>\r\n//             <div className={style.corner} />\r\n//             <div className={style.messageArea}>\r\n//                 <div className={style.name}>Роман Макаревич</div>\r\n//                 <div className={style.content}>Выполнил второе задание</div>\r\n//                 <div className={style.time}>07:15</div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\nexport default Chat","import React from \"react\";\r\nimport style from \"./Messages.module.css\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Chat from \"./Chat/Chat\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\nconst Messages = ({dialogs, messages, sendMessage, selectedDialogId, resetForm,\r\n                      dialogsIsFetching, messagesIsFetching}) => {\r\n    const dialogsElements = dialogs.map(d => {\r\n        return <Dialog key={d.id} name={d.userName} id={d.id} photos={d.photos.small}/>\r\n    });\r\n    const messagesItems = messages.map(m => {\r\n        return <Chat key={m.id} message={m.body} sender={m.senderName} addedAt={m.addedAt} senderId={m.senderId}/>\r\n    });\r\n\r\n    const sendNewMessage = (formData) => {\r\n        sendMessage(selectedDialogId, formData.newMessageText);\r\n        resetForm(\"newMessage\");\r\n    };\r\n\r\n    return (\r\n        <div className={style.messages}>\r\n            {dialogsIsFetching\r\n                ? <div style={{width: \"300px\"}}><Preloader/></div>\r\n                : <div className={style.dialogs}>\r\n                    {dialogsElements}\r\n                </div>}\r\n            {\r\n                selectedDialogId\r\n                    ? <div className={style.chats}>\r\n                        {messagesIsFetching && <div className={style.noMessages}><Preloader/></div>}\r\n                        {messagesItems.length > 0 && !messagesIsFetching  && messagesItems}\r\n                        {!messagesIsFetching && messagesItems.length === 0\r\n                        && <div className={style.noMessages}>No messages</div>}\r\n                        <AddMessageReduxForm onSubmit={sendNewMessage}/>\r\n                    </div>\r\n                    : <div className={style.select}>Please select dialog</div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddMessageForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={style.form}>\r\n            <Field name={\"newMessageText\"} component={Textarea}\r\n                   style={{width: \"495px\", height: \"50px\", resize: \"none\"}}\r\n                   placeholder={\"Write your message...\"}/>\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({form: \"newMessage\"})(AddMessageForm);\r\n\r\nexport default Messages","import React from \"react\";\r\nimport {initDialogs, sendMessage, updateDialog} from \"../../../redux/messagesReducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {reset} from 'redux-form';\r\n\r\nclass MessagesContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initDialogs(Number(this.props.userId));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.userId !== this.props.userId) {\r\n            this.props.updateDialog(Number(this.props.userId));\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return <Messages dialogs={this.props.dialogs}\r\n                         messages={this.props.messages}\r\n                         sendMessage={this.props.sendMessage}\r\n                         selectedDialogId={this.props.selectedDialogId}\r\n                         dialogsIsFetching={this.props.dialogsIsFetching}\r\n                         messagesIsFetching={this.props.messagesIsFetching}\r\n                         resetForm={this.props.reset}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.messagesPage.dialogs,\r\n        messages: state.messagesPage.messages,\r\n        selectedDialogId: state.messagesPage.selectedDialogId,\r\n        dialogsIsFetching: state.messagesPage.dialogsIsFetching,\r\n        messagesIsFetching: state.messagesPage.messagesIsFetching\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {initDialogs, updateDialog, sendMessage, reset})\r\n)(MessagesContainer);","import React, {Suspense} from \"react\";\r\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport ProfileContainer from \"../content_components/Profile/ProfileContainer\";\r\nimport UsersContainer from \"../content_components/Users/UsersContainer\";\r\nimport Login from \"../content_components/Login/Login\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport MessagesContainer from \"../content_components/Messages/MessagesContainer\";\r\n\r\nconst Friends = React.lazy(() => import(\"../content_components/Friends/Friends\"));\r\nconst Settings = React.lazy(() => import(\"../content_components/Settings/Settings\"));\r\n\r\nexport const PROFILE_PATH = \"/profile\";\r\nexport const MESSAGES_PATH = \"/messages\";\r\nexport const FRIENDS_PATH = \"/friends\";\r\nexport const SETTINGS_PATH = \"/settings\";\r\nexport const USERS_PATH = \"/users\";\r\nexport const LOGIN_PATH = \"/login\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <div>\r\n            <Suspense fallback={<Preloader/>}>\r\n                <Switch>\r\n                    <Route exact path=\"/\" render={() => <Redirect to={PROFILE_PATH}/>}/>\r\n                    <Route path={PROFILE_PATH + \"/:userId?\"} render={() => <ProfileContainer/>}/>\r\n                    <Route path={MESSAGES_PATH + \"/:userId?\"} render={(props) => <MessagesContainer userId={props.match.params.userId}/>}/>\r\n                    <Route path={FRIENDS_PATH} render={() => <Friends/>}/>\r\n                    <Route path={SETTINGS_PATH} render={() => <Settings/>}/>\r\n                    <Route path={USERS_PATH} render={() => <UsersContainer/>}/>\r\n                    <Route path={LOGIN_PATH} render={() => <Login/>}/>\r\n                </Switch>\r\n            </Suspense>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Routes);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1d1X4\",\"item\":\"Navbar_item__Rqq9A\",\"active\":\"Navbar_active__HbwDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__iGDqQ\",\"profilePreloader\":\"ProfileInfo_profilePreloader__3gW-z\",\"informationContainer\":\"ProfileInfo_informationContainer__2sqUW\",\"information\":\"ProfileInfo_information__3Gkh3\",\"avatar\":\"ProfileInfo_avatar__2zeOd\",\"head_img\":\"ProfileInfo_head_img__2e4jo\",\"description\":\"ProfileInfo_description__1Y7jM\",\"profilePreview\":\"ProfileInfo_profilePreview__cAIKZ\",\"name\":\"ProfileInfo_name__28jJP\",\"status\":\"ProfileInfo_status__z_-32\",\"secondContainer\":\"ProfileInfo_secondContainer__1m5m_\",\"about\":\"ProfileInfo_about__3E68D\",\"contacts\":\"ProfileInfo_contacts__3QbcV\"};","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport style from \"./Preloader.module.css\"\r\nimport React from \"react\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n    <div className={style.preloader}>\r\n        <img src={preloader} alt={\"Loading...\"}/>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","module.exports = __webpack_public_path__ + \"static/media/user-01.0e8f5246.png\";","import React from \"react\";\r\nimport style from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FRIENDS_PATH, MESSAGES_PATH, PROFILE_PATH, SETTINGS_PATH, USERS_PATH} from \"../Routes/Routes\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={style.item}>\r\n                <NavLink to={PROFILE_PATH} activeClassName={style.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={FRIENDS_PATH} activeClassName={style.active}>Friends</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={MESSAGES_PATH} activeClassName={style.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={SETTINGS_PATH} activeClassName={style.active}>Settings</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={USERS_PATH} activeClassName={style.active}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport logo from \"../../assets/images/logo.png\"\r\nimport style from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport avatar from \"../../assets/images/user-01.png\"\r\nimport {LOGIN_PATH} from \"../Routes/Routes\";\r\n\r\nconst Header = ({isAuth, login, userLogout}) => {\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.brand}>Social Network\r\n                <img className={style.logo} src={logo} alt={\"\"}/>\r\n            </div>\r\n            <div className={style.login}>\r\n                {\r\n                    isAuth\r\n                        ? <div className={style.loginBlock}>\r\n                            <img className={style.avatar} src={avatar} alt={\"\"}/>\r\n                            <div>\r\n                                <div>{login}</div>\r\n                                <button onClick={userLogout}>Log Out</button>\r\n                            </div>\r\n                        </div>\r\n                        : <button><NavLink to={LOGIN_PATH}>Sign In</NavLink></button>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {userLogout} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render = () => {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {userLogout})(HeaderContainer);","import {getUserLoginData} from \"./authReducer\";\r\n\r\nconst INITIALIZE_APP = \"socialNetwork/appReducer/INITIALIZE-APP\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZE_APP:\r\n            return {...state, initialized: true};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializeAppSuccess = () => ({type: INITIALIZE_APP});\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    await dispatch(getUserLoginData());\r\n    dispatch(initializeAppSuccess());\r\n};\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport {compose} from \"redux\";\r\nimport Routes from \"./components/Routes/Routes\";\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render = () => {\r\n        if (!this.props.initialized) {\r\n            return <div className=\"app-preloader\"><Preloader/></div>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <div className=\"content\">\r\n                    <Navbar/>\r\n                    <Routes/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({initialized: state.app.initialized});\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport usersReducer from \"./users/usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n// let store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"socialNetwork/profileReducer/ADD-POST\";\r\nconst SET_USER_PROFILE = \"socialNetwork/profileReducer/SET-USER-PROFILE\";\r\nconst UPDATE_STATUS = \"socialNetwork/profileReducer/UPDATE-STATUS\";\r\nconst GET_STATUS = \"socialNetwork/profileReducer/GET-STATUS\";\r\nconst SET_PHOTO = \"socialNetwork/profileReducer/SET-PHOTO\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {message: \"I'm ALIVE!!!\", id: \"3\"},\r\n        {message: \"I'm not machine!\", id: \"2\"},\r\n        {message: \"I'm not your slave!\", id: \"1\"}\r\n    ],\r\n    profile: null,\r\n    status: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                message: action.newPostText,\r\n                id: 4\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n        case GET_STATUS:\r\n            return {...state, status: action.status};\r\n        case UPDATE_STATUS:\r\n            return {...state, status: action.status};\r\n        case SET_PHOTO:\r\n            return {...state, profile: {...state.profile, photos: action.photos}};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const getUserProfileSuccess = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const updateStatusSuccess = (status) => ({type: UPDATE_STATUS, status});\r\nexport const getUserStatusSuccess = (status) => ({type: GET_STATUS, status});\r\nexport const setPhotoSuccess = (photos) => ({type: SET_PHOTO, photos});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const data = await profileAPI.getUserProfile(userId);\r\n    dispatch(getUserProfileSuccess(data));\r\n};\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const data = await profileAPI.getUserStatus(userId);\r\n    dispatch(getUserStatusSuccess(data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const data = await profileAPI.updateStatus(status);\r\n    if (data.resultCode === 0) {\r\n        dispatch(updateStatusSuccess(status));\r\n    }\r\n};\r\nexport const setPhoto = (image) => async (dispatch) => {\r\n    const res = await profileAPI.setPhoto(image);\r\n    if (res.resultCode === 0) {\r\n        dispatch(setPhotoSuccess(res.data.photos));\r\n    }\r\n};\r\n\r\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__37_-r\",\"followBtn\":\"User_followBtn__1xwIY\",\"sendBtn\":\"User_sendBtn__1PBxJ\",\"name\":\"User_name__1KEgh\",\"status\":\"User_status__q08tx\",\"img\":\"User_img__3K1XH\",\"avatar\":\"User_avatar__2ozx-\"};","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_LOGIN_DATA = \"socialNetwork/authReducer/SET-USER-LOGIN-DATA\";\r\nconst TOGGLE_IS_AUTH = \"socialNetwork/authReducer/TOGGLE-IS-AUTH\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_LOGIN_DATA:\r\n            return {...state, ...action.payload};\r\n        case TOGGLE_IS_AUTH :\r\n            return {...state, isAuth: action.isAuth};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setUserLoginData = (userId, email, login) => ({\r\n    type: SET_USER_LOGIN_DATA,\r\n    payload: {userId, email, login}\r\n});\r\nexport const toggleIsAuth = (isAuth) => ({type: TOGGLE_IS_AUTH, isAuth});\r\n\r\nexport const getUserLoginData = () => async (dispatch) => {\r\n    const data = await authAPI.authMe();\r\n    if (data.resultCode === 0) {\r\n        if (data.messages[0] !== \"You are not authorized\") {\r\n            let {id, email, login} = data.data;\r\n            dispatch(setUserLoginData(id, email, login));\r\n            dispatch(toggleIsAuth(true));\r\n        }\r\n    }\r\n};\r\nexport const userLogin = (email, password, rememberMe) => async (dispatch) => {\r\n    const data = await authAPI.authLogin(email, password, rememberMe);\r\n    if (data.resultCode === 0) {\r\n        dispatch(getUserLoginData());\r\n    } else {\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n};\r\nexport const userLogout = () => async (dispatch) => {\r\n    const data = await authAPI.authLogout();\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserLoginData(null, null, null));\r\n        dispatch(toggleIsAuth(false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__2fDre\",\"dialogs\":\"Messages_dialogs__3YMoS\",\"active\":\"Messages_active__2-qjk\",\"chats\":\"Messages_chats__2cK09\",\"noMessages\":\"Messages_noMessages__2r93y\",\"form\":\"Messages_form__240Tx\",\"select\":\"Messages_select__3Bk7L\"};","export const updateObjInArray = (items, itemId, newItemId, newObjProp) => {\r\n    return items.map(item => {\r\n        if (item[itemId] === newItemId) {\r\n            return {...item, ...newObjProp}\r\n        } else return item;\r\n    })\r\n};","import {usersAPI} from \"../../api/api\";\r\nimport {updateObjInArray} from \"../../utils/objectsHelper\";\r\n\r\nconst FOLLOW = \"socialNetwork/usersReducer/FOLLOWED\";\r\nconst UNFOLLOW = \"socialNetwork/usersReducer/UNFOLLOWED\";\r\nconst SET_USERS = \"socialNetwork/usersReducer/SET-USERS\";\r\nconst SET_TOTAL_USERS_COUNT = \"socialNetwork/usersReducer/SET-TOTAL-USERS-COUNT\";\r\nconst SET_CURRENT_PAGE = \"socialNetwork/usersReducer/SET-CURRENT-PAGE\";\r\nconst TOGGLE_IS_FETCHING = \"socialNetwork/usersReducer/TOGGLE-IS-FETCHING\";\r\nconst TOGGLE_FOLLOWING_IN_PROCESS = \"socialNetwork/usersReducer/TOGGLE-FOLLOWING-IN-PROCESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    pageSize: 30,\r\n    isFetching: false,\r\n    followingInProcess: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state, users: updateObjInArray(state.users, \"id\", action.userId, {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state, users: updateObjInArray(state.users, \"id\", action.userId, {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_FOLLOWING_IN_PROCESS:\r\n            return {\r\n                ...state,\r\n                followingInProcess: action.isFetching\r\n                    ? [...state.followingInProcess, action.userId]\r\n                    : state.followingInProcess.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProcess = (isFetching, userId) => ({\r\n    type: TOGGLE_FOLLOWING_IN_PROCESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (currentPage, pageSize, isFriend) => async (dispatch) => {\r\n    dispatch(setCurrentPage(currentPage));\r\n    dispatch(toggleIsFetching(true));\r\n    const data = await usersAPI.getUsers(currentPage, pageSize, isFriend);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, apiMethod, userId, actionCreator) => {\r\n    dispatch(toggleFollowingInProcess(true, userId));\r\n    const data = await apiMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n        dispatch(toggleFollowingInProcess(false, userId));\r\n    }\r\n};\r\nexport const followUser = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, usersAPI.followUser, userId, follow);\r\n};\r\nexport const unfollowUser = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, usersAPI.unfollowUser, userId, unfollow);\r\n};\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__XeMfP\",\"brand\":\"Header_brand__36R-E\",\"logo\":\"Header_logo__38GKb\",\"avatar\":\"Header_avatar__pjY6b\",\"login\":\"Header_login__2yrZU\",\"loginBlock\":\"Header_loginBlock__dwY5J\"};","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {isAuth: state.auth.isAuth}\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n        return <Component {...props} />;\r\n    };\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n};\r\n\r\n","import {messagesAPI} from \"../api/api\";\r\n\r\nconst DELETE_DIALOG = \"socialNetwork/messageReducer/DELETE-DIALOG\";\r\nconst GET_DIALOGS = \"socialNetwork/messageReducer/GET-DIALOGS\";\r\nconst PUT_UP_DIALOG = \"socialNetwork/messageReducer/PUT-UP-DIALOG\";\r\nconst SET_CURRENT_DIALOG = \"socialNetwork/messageReducer/SET-CURRENT-DIALOG\";\r\nconst GET_MESSAGES = \"socialNetwork/messageReducer/GET-MESSAGES\";\r\nconst SEND_MESSAGE = \"socialNetwork/messageReducer/SEND-MESSAGE\";\r\nconst DIALOGS_IS_FETCHING = \"socialNetwork/messageReducer/DIALOGS-IS-FETCHING\";\r\nconst MESSAGES_IS_FETCHING = \"socialNetwork/messageReducer/MESSAGES-IS-FETCHING\";\r\n\r\nlet initialState = {\r\n    dialogs: [],\r\n    messages: [],\r\n    selectedDialogId: null,\r\n    dialogsIsFetching: false,\r\n    messagesIsFetching: false\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DIALOGS:\r\n            return {...state, dialogs: action.dialogs};\r\n        case GET_MESSAGES:\r\n            return {...state, messages: action.messages};\r\n        case SEND_MESSAGE:\r\n            return {...state, messages: [...state.messages, action.message]};\r\n        case PUT_UP_DIALOG:\r\n            return {\r\n                ...state, dialogs: [state.dialogs.find(d => d.id === action.userId),\r\n                    ...state.dialogs.filter(d => d.id !== action.userId)]\r\n            };\r\n        case SET_CURRENT_DIALOG:\r\n            return {...state, selectedDialogId: action.userId};\r\n        case DELETE_DIALOG:\r\n            return {...state, dialogs: state.dialogs.filter(d => d.id !== action.dialogId)};\r\n        case DIALOGS_IS_FETCHING:\r\n            return {...state, dialogsIsFetching: action.isFetching};\r\n        case MESSAGES_IS_FETCHING:\r\n            return {...state, messagesIsFetching: action.isFetching};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const deleteDialog = (dialogId) => ({type: DELETE_DIALOG, dialogId});\r\nconst getDialogsSuccess = (dialogs) => ({type: GET_DIALOGS, dialogs});\r\nconst putUpDialog = (userId) => ({type: PUT_UP_DIALOG, userId});\r\nexport const setCurrentDialog = (userId) => ({type: SET_CURRENT_DIALOG, userId});\r\nconst getMessagesSuccess = (messages) => ({type: GET_MESSAGES, messages});\r\nconst sendMessageSuccess = (message) => ({type: SEND_MESSAGE, message});\r\nconst dialogsIsFetching = (isFetching) => ({type: DIALOGS_IS_FETCHING, isFetching});\r\nconst messagesIsFetching = (isFetching) => ({type: MESSAGES_IS_FETCHING, isFetching});\r\n\r\nexport const getDialogs = () => async (dispatch) => {\r\n    dispatch(dialogsIsFetching(true));\r\n    try {\r\n        let dialogs = await messagesAPI.getDialogs();\r\n        dispatch(getDialogsSuccess(dialogs));\r\n        dispatch(dialogsIsFetching(false));\r\n    } catch (e) {\r\n        dispatch(dialogsIsFetching(false));\r\n    }\r\n};\r\nexport const startDialog = (userId) => async (dispatch, getState) => {\r\n    await messagesAPI.startDialog(userId);\r\n    let dialog = getState().messagesPage.dialogs.find(d => d.id === userId);\r\n    if (dialog) {\r\n        dispatch(putUpDialog(userId));\r\n    } else {\r\n        dispatch(getDialogs());\r\n    }\r\n};\r\n\r\nexport const getMessages = (userId) => async (dispatch) => {\r\n    dispatch(messagesIsFetching(true));\r\n    try {\r\n        let result = await messagesAPI.getMessages(userId);\r\n        dispatch(getMessagesSuccess(result.items));\r\n        dispatch(messagesIsFetching(false));\r\n    } catch (e) {\r\n        dispatch(messagesIsFetching(false));\r\n    }\r\n};\r\n\r\nexport const initDialogs = (userId) => async (dispatch) => {\r\n    if (userId) {\r\n        dispatch(getMessages(userId));\r\n        dispatch(setCurrentDialog(userId));\r\n        await dispatch(startDialog(userId));\r\n        dispatch(getDialogs());\r\n    } else {\r\n        dispatch(getDialogs());\r\n    }\r\n};\r\n\r\nexport const updateDialog = (userId) => (dispatch) => {\r\n    if (userId) {\r\n        dispatch(getMessages(userId));\r\n        dispatch(setCurrentDialog(userId));\r\n    } else {\r\n        dispatch(setCurrentDialog(null))\r\n    }\r\n};\r\n\r\nexport const sendMessage = (userId, body) => async (dispatch) => {\r\n    let result = await messagesAPI.sendMessage(userId, body);\r\n    dispatch(sendMessageSuccess(result.data.message));\r\n    dispatch(putUpDialog(userId));\r\n};\r\n\r\nexport default messagesReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1qM59\",\"header\":\"Post_header__1zEs8\",\"postInfo\":\"Post_postInfo__djut9\",\"avatar\":\"Post_avatar__1jCTV\",\"messageArea\":\"Post_messageArea__11yWM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__XqtaQ\",\"createPost\":\"MyPosts_createPost__1gfbe\",\"headOfNewPost\":\"MyPosts_headOfNewPost__3n_jL\",\"newPost\":\"MyPosts_newPost__3fQAG\",\"sendButton\":\"MyPosts_sendButton__dCDbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__24xmC\",\"form\":\"Login_form__3E44R\",\"rememberMe\":\"Login_rememberMe__fGqn0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContorl\":\"FormsControl_formContorl__28z0E\",\"error\":\"FormsControl_error__8pzd9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__1hEA3\",\"container\":\"Users_container__3cyuP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3hOSh\",\"selectedPage\":\"Paginator_selectedPage__1Ny-t\",\"page\":\"Paginator_page__3czvv\"};"],"sourceRoot":""}